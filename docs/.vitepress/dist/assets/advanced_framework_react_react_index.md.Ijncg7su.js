import{_ as a,c as s,o as i,V as t}from"./chunks/framework.jq6gLv6S.js";const E=JSON.parse('{"title":"React","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/framework/react/react/index.md","filePath":"advanced/framework/react/react/index.md","lastUpdated":1707813350000}'),e={name:"advanced/framework/react/react/index.md"},l=t(`<h1 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React&quot;">​</a></h1><p>用户构建用户界面的javascript库</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全局安装 create-react-app 脚手架</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm install -g create-react-app</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建应用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-react-app react-demo</span></span></code></pre></div><h2 id="默认三个依赖的作用" tabindex="-1">默认三个依赖的作用 <a class="header-anchor" href="#默认三个依赖的作用" aria-label="Permalink to &quot;默认三个依赖的作用&quot;">​</a></h2><h3 id="react-1" tabindex="-1">react <a class="header-anchor" href="#react-1" aria-label="Permalink to &quot;react&quot;">​</a></h3><p>react核心库</p><h3 id="react-dom" tabindex="-1">react-dom <a class="header-anchor" href="#react-dom" aria-label="Permalink to &quot;react-dom&quot;">​</a></h3><ul><li>作用是<strong>将虚拟DOM渲染到文档中变成实际DOM</strong></li><li>是react开发项目时需要使用的工具包，提供了DOM特定的方法，可以在应用程序的顶层使用，也可以作为React模型之外的特殊操作DOM的接口</li></ul><h3 id="react-scripts" tabindex="-1">react-scripts <a class="header-anchor" href="#react-scripts" aria-label="Permalink to &quot;react-scripts&quot;">​</a></h3><p>为脚手架<code>create-react-app</code>提供脚本命令和webpack配置</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;react-scripts start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;react-scripts build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;react-scripts test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;eject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;react-scripts eject&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="web-vitals" tabindex="-1">web-vitals <a class="header-anchor" href="#web-vitals" aria-label="Permalink to &quot;web-vitals&quot;">​</a></h3><p>可获取三个关键指标（CLS、FID、LCP）和两个辅助指标（FCP、TTFB），性能检测工具<code>reportWebVitals.js</code></p><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><ul><li>Mounting <ul><li>constructor()</li><li>static getDerivedStateFromProps()</li><li>render()</li><li>componentDidMount()</li></ul></li><li>Updating <ul><li>static getDerivedStateFromProps()</li><li>shouldComponentUpdate()</li><li>render()</li><li>getSnapshotBeforeUpdate()</li><li>componentDidUpdate()</li></ul></li><li>Unmounting <ul><li>componentWillUnmount()</li></ul></li><li>Error Handling <ul><li>static getDerivedStateFromError()</li><li>componentDidCatch()</li></ul></li></ul>`,15),n=[l];function r(p,h,c,o,d,k){return i(),s("div",null,n)}const g=a(e,[["render",r]]);export{E as __pageData,g as default};
