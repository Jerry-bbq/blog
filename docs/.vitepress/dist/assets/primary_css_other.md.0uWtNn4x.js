import{_ as s,c as i,o as a,V as t}from"./chunks/framework.e0zpvRJ8.js";const g=JSON.parse('{"title":"其他","description":"","frontmatter":{},"headers":[],"relativePath":"primary/css/other.md","filePath":"primary/css/other.md","lastUpdated":1657430464000}'),l={name:"primary/css/other.md"},e=t(`<h1 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h1><h2 id="display-none、visibile-hidden、opacity-0的区别" tabindex="-1">display:none、visibile:hidden、opacity:0的区别 <a class="header-anchor" href="#display-none、visibile-hidden、opacity-0的区别" aria-label="Permalink to &quot;display:none、visibile:hidden、opacity:0的区别&quot;">​</a></h2><table><thead><tr><th>类型</th><th>是否隐藏</th><th>是否在文档中占用空间</th><th>是否会触发事件</th></tr></thead><tbody><tr><td>display:none</td><td>是</td><td>否</td><td>否</td></tr><tr><td>visibile:hidden</td><td>是</td><td>是</td><td>否</td></tr><tr><td>opacity:0</td><td>是</td><td>是</td><td>是</td></tr></tbody></table><h2 id="文本超出部分显示省略号" tabindex="-1">文本超出部分显示省略号 <a class="header-anchor" href="#文本超出部分显示省略号" aria-label="Permalink to &quot;文本超出部分显示省略号&quot;">​</a></h2><p>单行</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.ellipsis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    overflow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    text-overflow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ellipsis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    white-space</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nowrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">复杂情况</p><p>如果后面跟icon，可以添加<code>padding-right</code>配合<code>position: absolute</code>来使用</p><p>注意：<code>overflow</code>会遮盖<code>position: absolute</code></p></div><p>多行</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.ellipsis-line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-webkit-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -webkit-box-orient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -webkit-line-clamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; // 最多显示几行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    overflow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="实现一个等腰三角形" tabindex="-1">实现一个等腰三角形 <a class="header-anchor" href="#实现一个等腰三角形" aria-label="Permalink to &quot;实现一个等腰三角形&quot;">​</a></h2><ul><li>盒子宽高设置为0</li><li>边框设置宽度和明度</li><li>边框设置宽度和颜色</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.triangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="linear-gradient" tabindex="-1">linear-gradient <a class="header-anchor" href="#linear-gradient" aria-label="Permalink to &quot;linear-gradient&quot;">​</a></h2><p>linear-gradient() CSS 函数创建一个由两种或多种颜色沿一条直线进行线性过渡的图像，其结果是 &lt;gradient&gt; 数据类型的对象，此对象是一种特殊的 &lt;image&gt; 数据类型</p><p>在线调试工具：</p><ul><li><a href="https://mycolor.space/" target="_blank" rel="noreferrer">ColorSpace</a></li><li><a href="https://gradient.shapefactory.co/" target="_blank" rel="noreferrer">渐变神器Gradient</a></li></ul><h2 id="box-show" tabindex="-1">box-show <a class="header-anchor" href="#box-show" aria-label="Permalink to &quot;box-show&quot;">​</a></h2><p>在线调试工具：</p><ul><li><a href="https://box-shadow.art/" target="_blank" rel="noreferrer">Box Shadow</a></li><li><a href="https://lingdaima.com/shadow/" target="_blank" rel="noreferrer">lingdaima</a></li></ul><h2 id="css玻璃风格工具" tabindex="-1">CSS玻璃风格工具 <a class="header-anchor" href="#css玻璃风格工具" aria-label="Permalink to &quot;CSS玻璃风格工具&quot;">​</a></h2><ul><li><a href="https://glassgenerator.netlify.app/" target="_blank" rel="noreferrer">Glass Morphism</a></li></ul><h2 id="在线svg-背景" tabindex="-1">在线SVG 背景 <a class="header-anchor" href="#在线svg-背景" aria-label="Permalink to &quot;在线SVG 背景&quot;">​</a></h2><ul><li><a href="https://bgjar.com/" target="_blank" rel="noreferrer">BGJar</a></li></ul>`,23),n=[e];function h(p,r,k,d,o,c){return a(),i("div",null,n)}const y=s(l,[["render",h]]);export{g as __pageData,y as default};
