import{_ as n,o as s,c as a,a as t}from"./app.9fbd2eaa.js";var p="/blog/assets/stack-push.0e7583e4.png",o="/blog/assets/stack-pop.e0b5736e.png",c="/blog/assets/stack-app.1afaf066.png";const e={},u=t(`<h1 id="\u6808" tabindex="-1"><a class="header-anchor" href="#\u6808" aria-hidden="true">#</a> \u6808</h1><ul><li>\u6570\u636E\u5448\u7EBF\u6027\u6392\u5217\u7684\u6570\u636E\u7ED3\u6784</li><li>\u53EA\u80FD\u8BBF\u95EE\u6700\u65B0\u6DFB\u52A0\u7684\u6570\u636E</li><li>\u6808\u5C31\u50CF\u662F\u4E00\u645E\u4E66\uFF0C\u62FF\u5230\u65B0\u4E66\u65F6\u6211\u4EEC\u4F1A\u628A\u5B83\u653E\u5728\u4E66\u5806\u7684\u6700\u4E0A\u9762\uFF0C\u53D6\u4E66\u65F6\u4E5F\u53EA\u80FD\u4ECE\u6700\u4E0A\u9762\u7684\u65B0\u4E66\u5F00\u59CB\u53D6</li></ul><h2 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> \u5B9A\u4E49</h2><p>\u6808\u662F\u4E00\u79CD\u9075\u4ECE<code>\u540E\u8FDB\u5148\u51FA(LIFO)</code>\u539F\u5219\u7684\u6709\u5E8F\u96C6\u5408\u3002</p><p>\u65B0\u6DFB\u52A0\u6216\u5F85\u5220\u9664\u7684\u5143\u7D20\u90FD\u4FDD\u5B58\u5728\u6808\u7684\u540C\u4E00\u7AEF\uFF0C\u79F0\u4F5C<strong>\u6808\u9876</strong>\uFF0C\u53E6\u4E00\u7AEF\u5C31\u53EB<strong>\u6808\u5E95</strong>\u3002\u5728\u6808\u91CC\uFF0C\u65B0\u5143\u7D20\u90FD\u9760\u8FD1\u6808\u9876\uFF0C\u65E7\u5143\u7D20\u90FD\u63A5\u8FD1\u6808\u5E95\u3002</p><p>\u6808\u4E5F\u88AB\u7528\u5728\u7F16\u7A0B\u8BED\u8A00\u7684\u7F16\u8BD1\u5668\u548C\u5185\u5B58\u4E2D\u4FDD\u5B58\u53D8\u91CF\u3001\u65B9\u6CD5\u8C03\u7528\u7B49\uFF0C\u4E5F\u88AB\u7528\u4E8E\u6D4F\u89C8\u5668\u5386\u53F2\u8BB0\u5F55 (\u6D4F\u89C8\u5668\u7684\u8FD4\u56DE\u6309\u94AE)\u3002</p><h2 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h2><table><thead><tr><th>\u65B9\u6CD5</th><th>\u8BF4\u660E</th><th>\u6709\u65E0\u8FD4\u56DE</th></tr></thead><tbody><tr><td>push(element(s))</td><td>\u6DFB\u52A0\u4E00\u4E2A(\u6216\u51E0\u4E2A)\u65B0\u5143\u7D20\u5230\u6808\u9876</td><td>false</td></tr><tr><td>clear()</td><td>\u79FB\u9664\u6808\u91CC\u7684\u6240\u6709\u5143\u7D20</td><td>false</td></tr><tr><td>pop()</td><td>\u79FB\u9664\u6808\u9876\u7684\u5143\u7D20\uFF0C\u540C\u65F6\u8FD4\u56DE\u88AB\u79FB\u9664\u7684\u5143\u7D20</td><td>true</td></tr><tr><td>peek()</td><td>\u8FD4\u56DE\u6808\u9876\u7684\u5143\u7D20\uFF0C\u4E0D\u5BF9\u6808\u505A\u4EFB\u4F55\u4FEE\u6539</td><td>true</td></tr><tr><td>isEmpty()</td><td>\u5982\u679C\u6808\u91CC\u6CA1\u6709\u4EFB\u4F55\u5143\u7D20\u5C31\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false</td><td>true</td></tr><tr><td>size()</td><td>\u8FD4\u56DE\u6808\u91CC\u7684\u5143\u7D20\u4E2A\u6570\u3002\u8BE5\u65B9\u6CD5\u548C\u6570\u7EC4\u7684 length \u5C5E\u6027\u5F88\u7C7B\u4F3C</td><td>true</td></tr></tbody></table><h2 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h2><h3 id="\u65B9\u5F0F\u4E00-\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u65B9\u5F0F\u4E00-\u6570\u7EC4" aria-hidden="true">#</a> \u65B9\u5F0F\u4E00\uFF1A\u6570\u7EC4</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Stack</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6D4B\u8BD5\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA\u4E3Atrue</span>
stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA8</span>
stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FAfalse</span>
stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// [5,8,11,15]</span>
</code></pre></div><p>\u4E0B\u56FE\u63CF\u7ED8\u4E86\u5BF9\u6808\u7684\u64CD\u4F5C\u548C\u5F53\u524D\u7684\u72B6\u6001\uFF1A</p><p><img src="`+p+`" alt="stack-push"></p><p>\u79FB\u9664\u5143\u7D20\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// [5,8]</span>
</code></pre></div><p>\u4E0B\u56FE\u63CF\u7ED8\u4E86\u5BF9\u6808\u7684\u64CD\u4F5C\u548C\u5F53\u524D\u7684\u72B6\u6001\uFF1A</p><p><img src="`+o+`" alt="stack-pop"></p><h3 id="\u65B9\u5F0F\u4E8C-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u65B9\u5F0F\u4E8C-\u5BF9\u8C61" aria-hidden="true">#</a> \u65B9\u5F0F\u4E8C\uFF1A\u5BF9\u8C61</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Stack</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u8BB0\u5F55\u6808\u7684\u5927\u5C0F</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span> <span class="token operator">=</span> element
    <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5220\u9664\u6808\u9876</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span>
    <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">===</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count
  <span class="token punctuation">}</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u521B\u5EFAtoString\u65B9\u6CD5</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> objString <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      objString <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>objString<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> objString
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a> \u95EE\u9898</h2><p>\u4F7F\u7528<code>class</code>\u5B9A\u4E49\u7C7B\u65E0\u6CD5\u8BBE\u7F6E<code>\u79C1\u6709\u5C5E\u6027</code>\u548C<code>\u79C1\u6709\u65B9\u6CD5</code>\uFF0C\u89E3\u51B3\u65B9\u6848\uFF1A</p><ul><li>\u4F7F\u7528\u4E0B\u5212\u7EBF\u547D\u540D\u7EA6\u5B9A</li><li>Symbol</li><li>WeakMap</li><li>TypeScript \u63D0\u4F9B\u4E86\u4E00\u4E2A\u7ED9\u7C7B\u5C5E\u6027\u548C\u65B9\u6CD5\u4F7F\u7528\u7684<code>private</code>\u4FEE\u9970\u7B26\u3002\u7136\u800C\uFF0C\u8BE5\u4FEE\u9970\u7B26\u53EA\u5728\u7F16\u8BD1\u65F6\u6709\u7528(\u5305\u62EC\u6211\u4EEC\u5728\u524D\u51E0\u7AE0\u8BA8\u8BBA\u7684 TypeScript \u7C7B\u578B\u548C\u9519\u8BEF\u68C0\u6D4B)\u3002\u5728\u4EE3\u7801\u88AB\u8F6C\u79FB\u5B8C\u6210\u540E\uFF0C\u5C5E\u6027\u540C\u6837\u662F\u516C\u5F00\u7684\u3002</li><li>\u5728\u5C5E\u6027\u524D\u6DFB\u52A0\u4E95\u53F7(<code>#</code>)\u4F5C\u4E3A\u524D\u7F00\u6765\u58F0\u660E\u79C1\u6709\u5C5E\u6027</li></ul><h2 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h2><h3 id="\u6574\u6570\u5341\u8FDB\u5236\u8F6C\u5316\u4E3A\u4E8C\u8FDB\u5236" tabindex="-1"><a class="header-anchor" href="#\u6574\u6570\u5341\u8FDB\u5236\u8F6C\u5316\u4E3A\u4E8C\u8FDB\u5236" aria-hidden="true">#</a> \u6574\u6570\u5341\u8FDB\u5236\u8F6C\u5316\u4E3A\u4E8C\u8FDB\u5236</h3><p>\u539F\u7406\uFF1A\u5C06\u8BE5\u5341\u8FDB\u5236\u6570<strong>\u9664\u4EE52</strong>(\u4E8C\u8FDB\u5236\u662F\u6EE1\u4E8C\u8FDB\u4E00)\u5E76<strong>\u5BF9\u5546\u53D6\u6574</strong>\uFF0C \u76F4\u5230<strong>\u5546\u662F0\u4E3A\u6B62</strong>\uFF0C\u6700\u540E\uFF0C\u5C06\u4F59\u6570\u505A\u4E00\u4E2A<strong>\u9006\u5E8F\u6392\u5217</strong></p><p><img src="`+c+`" alt="stack-app"></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">decimalToBinary</span><span class="token punctuation">(</span><span class="token parameter">decNumber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> remStack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> number <span class="token operator">=</span> decNumber
  <span class="token keyword">let</span> rem
  <span class="token keyword">let</span> binaryString <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  
  <span class="token comment">// \u5165\u6808</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    rem <span class="token operator">=</span> number <span class="token operator">%</span> <span class="token number">2</span>                 <span class="token comment">// \u4F59\u6570</span>
    remStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rem<span class="token punctuation">)</span>               <span class="token comment">// \u4EE5\u5341\u8FDB\u523610\u4E3A\u4F8B\uFF0C\u5206\u522B\u5C06\`0,1,0,1\`\u5B58\u5165\u6808\u4E2D</span>
    number <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>number <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment">// \u5546\uFF08\u53D6\u5546\u7684\u6574\u6570\uFF08\u5411\u4E0B\u53D6\u6574\uFF09\uFF09</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u51FA\u6808\uFF08\u6E05\u7A7A\u6808\uFF09</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>remStack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7528 pop \u65B9\u6CD5\u628A\u6808\u4E2D\u7684\u5143\u7D20\u90FD\u79FB\u9664\uFF0C\u628A\u51FA\u6808\u7684\u5143\u7D20\u8FDE\u63A5\u6210\u5B57\u7B26\u4E32</span>
    binaryString <span class="token operator">+=</span> remStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> binaryString
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token function">decimalToBinary</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>     <span class="token comment">// &#39;1010&#39;</span>
<span class="token function">decimalToBinary</span><span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">)</span>    <span class="token comment">// &#39;11101001&#39;</span>
</code></pre></div><p>\u4F7F\u7528\u6570\u7EC4\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">decimalToBinary</span><span class="token punctuation">(</span><span class="token parameter">decNumber</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> remArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> number <span class="token operator">=</span> decNumber
  <span class="token keyword">let</span> rem

  <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    rem <span class="token operator">=</span> number <span class="token operator">%</span> <span class="token number">2</span>
    remArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rem<span class="token punctuation">)</span>
    number <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>number <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> remArr
    <span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6574\u6570\u5341\u8FDB\u5236\u8F6C\u5316\u4E3A\u5176\u4ED6\u8FDB\u5236" tabindex="-1"><a class="header-anchor" href="#\u6574\u6570\u5341\u8FDB\u5236\u8F6C\u5316\u4E3A\u5176\u4ED6\u8FDB\u5236" aria-hidden="true">#</a> \u6574\u6570\u5341\u8FDB\u5236\u8F6C\u5316\u4E3A\u5176\u4ED6\u8FDB\u5236</h3><p>\u628A\u5341\u8FDB\u5236\u8F6C\u6362\u6210\u57FA\u6570\u4E3A 2~36 \u7684\u4EFB\u610F\u8FDB\u5236</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">baseConverter</span><span class="token punctuation">(</span><span class="token parameter">decNumber<span class="token punctuation">,</span> base</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> remStack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> digits <span class="token operator">=</span> <span class="token string">&#39;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</span>
  <span class="token keyword">let</span> number <span class="token operator">=</span> decNumber
  <span class="token keyword">let</span> rem
  <span class="token keyword">let</span> baseString <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>base <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> base <span class="token operator">&lt;=</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>number <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    rem <span class="token operator">=</span> number <span class="token operator">%</span> base
    remStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rem<span class="token punctuation">)</span>
    number <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>number <span class="token operator">/</span> base<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>remStack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5341\u8FDB\u5236\u8F6C\u6210\u5341\u516D\u8FDB\u5236\u65F6\uFF0C\u4F59\u6570\u662F 0~9 \u52A0\u4E0A A\u3001B\u3001C\u3001D\u3001E \u548C F</span>
    baseString <span class="token operator">+=</span> digits<span class="token punctuation">[</span>remStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> baseString
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token function">baseConverter</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment">// &#39;1010&#39;</span>
<span class="token function">baseConverter</span><span class="token punctuation">(</span><span class="token number">100345</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>      <span class="token comment">// &#39;11000011111111001&#39;</span>
<span class="token function">baseConverter</span><span class="token punctuation">(</span><span class="token number">100345</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>      <span class="token comment">// &#39;303771&#39;</span>
<span class="token function">baseConverter</span><span class="token punctuation">(</span><span class="token number">100345</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>     <span class="token comment">// &#39;187F9&#39;</span>
<span class="token function">baseConverter</span><span class="token punctuation">(</span><span class="token number">100345</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span>     <span class="token comment">// &#39;2BW0&#39;</span>
</code></pre></div>`,34),l=[u];function k(i,r){return s(),a("div",null,l)}var m=n(e,[["render",k],["__file","stack.html.vue"]]);export{m as default};
