import{_ as n,o as s,c as a,d as t}from"./app.b03efe37.js";const p={},o=t(`<h1 id="\u7BAD\u5934\u51FD\u6570\u4E0E\u666E\u901A\u51FD\u6570\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570\u4E0E\u666E\u901A\u51FD\u6570\u7684\u533A\u522B" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570\u4E0E\u666E\u901A\u51FD\u6570\u7684\u533A\u522B</h1><h2 id="\u8BED\u6CD5\u4E0A\u66F4\u7B80\u6D01" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5\u4E0A\u66F4\u7B80\u6D01" aria-hidden="true">#</a> \u8BED\u6CD5\u4E0A\u66F4\u7B80\u6D01</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u666E\u901A\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
<span class="token comment">// \u7BAD\u5934\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b
</code></pre></div><h2 id="\u4E0D\u80FD\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u80FD\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u4F7F\u7528" aria-hidden="true">#</a> \u4E0D\u80FD\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u4F7F\u7528</h2><p>\u7BAD\u5934\u51FD\u6570\u662F\u533F\u540D\u51FD\u6570\uFF0C\u4E0D\u80FD\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\uFF0C\u4E0D\u80FD\u4F7F\u7528new\u64CD\u4F5C\u7B26</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">arrowFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">commonFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">let</span> newFn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">arrowFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Uncaught TypeError: fn is not a constructor</span>
<span class="token keyword">let</span> newCommonFn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">commonFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// commonFn {}</span>
</code></pre></div><h2 id="\u6CA1\u6709\u539F\u578B\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u6CA1\u6709\u539F\u578B\u5BF9\u8C61" aria-hidden="true">#</a> \u6CA1\u6709\u539F\u578B\u5BF9\u8C61</h2><p>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709\u539F\u578B\u5BF9\u8C61<code>prototype</code></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">arrowFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">commonFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arrowFn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>commonFn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// {constructor: \u0192}</span>
</code></pre></div><h2 id="\u6CA1\u6709\u81EA\u5DF1\u7684this" tabindex="-1"><a class="header-anchor" href="#\u6CA1\u6709\u81EA\u5DF1\u7684this" aria-hidden="true">#</a> \u6CA1\u6709\u81EA\u5DF1\u7684this</h2><ul><li>\u7BAD\u5934\u51FD\u6570\u6CA1<code>this</code>\uFF0C\u5B83\u91CC\u9762\u7684<code>this</code><strong>\u7EE7\u627F\u51FD\u6570\u6240\u5904\u7684\u4E0A\u4E0B\u6587\u4E2D\u7684this</strong>\uFF08\u901A\u8FC7\u67E5\u627E\u4F5C\u7528\u57DF\u94FE\u6765\u786E\u5B9A<code>this</code>\u7684\u503C\uFF09</li><li>\u4F7F\u7528<code>call/apply/bind</code> \u4E5F<strong>\u65E0\u6CD5\u6539\u53D8</strong>\u7BAD\u5934\u51FD\u6570\u7684<code>this</code>\u6307\u5411</li><li>\u666E\u901A\u51FD\u6570\u4E2D\u7684<code>this</code>\u6307\u5411\u7684\u662F\u8C03\u7528\u5B83\u7684\u5BF9\u8C61\uFF0C\u7BAD\u5934\u51FD\u6570\u4F53\u5185\u7684this\u5BF9\u8C61\uFF0C\u5C31\u662F\u5B9A\u4E49\u8BE5\u51FD\u6570\u65F6\u6240\u5728\u7684\u4F5C\u7528\u57DF\u6307\u5411\u7684\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u4F7F\u7528\u65F6\u6240\u5728\u7684\u4F5C\u7528\u57DF\u6307\u5411\u7684\u5BF9\u8C61</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">stuName</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">printName</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6307\u5411window\u5BF9\u8C61</span>
        <span class="token comment">// \u4F7F\u7528call\u65E0\u6CD5\u6539\u53D8this\u6307\u5411\uFF0C\u4ECD\u7136\u6307\u5411window\u5BF9\u8C61</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;printName&#39;</span><span class="token punctuation">)</span> 
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stuName<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">printName2</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6307\u5411\u5F53\u524D\u5BF9\u8C61obj</span>
        <span class="token comment">// \u4F7F\u7528call\u53EF\u4EE5\u6539\u53D8this\u6307\u5411\u5BF9\u8C61 {stuName: &#39;luck&#39;}</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;printName2&#39;</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stuName<span class="token punctuation">)</span> <span class="token comment">// jack</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">printName3</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;printName3&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u4F5C\u7528\u57DF\u94FE\u67E5\u627E \u6307\u5411\u5F53\u524D\u5BF9\u8C61obj</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

obj<span class="token punctuation">.</span><span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span><span class="token function">printName2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span><span class="token function">printName3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span><span class="token function">printName2</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">stuName</span><span class="token operator">:</span> <span class="token string">&#39;luck&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span><span class="token function">printName</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">stuName</span><span class="token operator">:</span> <span class="token string">&#39;luck&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6CA1\u6709arguments" tabindex="-1"><a class="header-anchor" href="#\u6CA1\u6709arguments" aria-hidden="true">#</a> \u6CA1\u6709arguments</h2><p>\u7BAD\u5934\u51FD\u6570\u4E2D\u6CA1\u6709arguments\uFF08\u7C7B\u6570\u7EC4\uFF09\uFF0C\u53D6\u800C\u4EE3\u4E4B\u4F7F\u7528rest\u53C2\u6570\u89E3\u51B3</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">arrowFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">commonFn</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span> <span class="token punctuation">}</span>

<span class="token function">arrowFn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// Uncaught ReferenceError: arguments is not defined</span>
<span class="token function">commonFn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// Arguments(3) [1, 2, 3, callee: \u0192, Symbol(Symbol.iterator): \u0192]</span>

<span class="token comment">// \u89E3\u51B3</span>
<span class="token keyword">let</span> <span class="token function-variable function">arrowFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token function">arrowFn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3]</span>
</code></pre></div>`,15),c=[o];function e(u,l){return s(),a("div",null,c)}var k=n(p,[["render",e],["__file","arrow-func.html.vue"]]);export{k as default};
