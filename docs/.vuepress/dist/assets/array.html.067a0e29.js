import{_ as n,o as a,c as s,a as p}from"./app.09b44864.js";const t={},o=p(`<h1 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h1><h2 id="\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5" aria-hidden="true">#</a> \u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5</h2><ol><li>\u533A\u522B\u547D\u4EE4\u5F0F\u4E0E\u58F0\u660E\u5F0F</li><li>\u4F7F\u7528\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5</li></ol><ul><li>map()</li><li>reduce()</li><li>filter()</li><li>find()</li><li>findIndex()</li><li>every()</li><li>some()</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">]</span>

<span class="token comment">// 1. \u4EA7\u751F\u4E00\u4E2A\u6BCF\u4E2A\u5143\u7D20\u90FD\u6BD4\u539F\u6765\u592710\u7684\u65B0\u6570\u7EC4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 2. \u5F97\u5230\u6240\u6709\u5947\u6570\u7684\u548C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">preTotal<span class="token punctuation">,</span> item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> preTotal <span class="token operator">+</span> <span class="token punctuation">(</span>item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> item <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 3. \u5F97\u5230\u503C\u5927\u4E8E8\u4E14\u4E0B\u6807\u662F\u5076\u6570\u4F4D\u7684\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 4. \u627E\u5230\u4E00\u4E2A\u503C\u5927\u4E8E8\u4E14\u4E0B\u6807\u662F\u5076\u6570\u4F4D\u7684\u5143\u7D20</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 5. \u627E\u51FA\u4E00\u4E2A\u503C\u5927\u4E8E8\u4E14\u4E0B\u6807\u662F\u5076\u6570\u4F4D\u7684\u5143\u7D20\u7684\u4E0B\u6807</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 6. \u5224\u65AD\u4E0B\u6807\u4E3A\u5076\u6570\u7684\u5143\u7D20\u662F\u5426\u90FD\u662F\u5947\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 7. \u5224\u65AD\u662F\u5426\u6709\u4E0B\u6807\u4E3A\u5076\u6570\u7684\u5143\u7D20\u503C\u4E3A\u5947\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><ol start="3"><li>\u81EA\u5B9A\u4E49\u6570\u7EC4\u58F0\u660E\u5F0F\u7CFB\u5217\u65B9\u6CD5</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">map</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
   <span class="token comment">// \u904D\u5386\u5F53\u524D\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\uFF0C\u8C03\u7528callback\u5F97\u5230\u4E00\u4E2A\u7ED3\u679C\u6570\u636E\uFF0C\u6DFB\u52A0arr</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
       <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
       arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
   <span class="token punctuation">}</span> 
   <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">reduce</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> initValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7ED3\u679C\u521D\u59CB\u503C</span>
    <span class="token keyword">let</span> total <span class="token operator">=</span> initValue
   <span class="token comment">// \u904D\u5386\u5F53\u524D\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\uFF0C\u8C03\u7528callback\u5F97\u5230\u4E00\u4E2A\u7D2F\u52A0\u7684\u7ED3\u679C\u6570\u636E</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
       total <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> element<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
   <span class="token punctuation">}</span> 
   <span class="token comment">// \u8FD4\u56DE\u7ED3\u679C</span>
   <span class="token keyword">return</span> total
<span class="token punctuation">}</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">filter</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
   <span class="token comment">// \u904D\u5386\u5F53\u524D\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\uFF0C\u8C03\u7528callback\u5F97\u5230\u4E00\u4E2A \u5E03\u5C14\u503C\uFF0C \u5982\u679C\u4E3Atrue\uFF0C\u5C06\u5F53\u524Delement\u6DFB\u52A0\u5230arr</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
       <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> 
   <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">find</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u904D\u5386\u5F53\u524D\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\uFF0C\u8C03\u7528callback\u5F97\u5230\u4E00\u4E2A \u5E03\u5C14\u503C\uFF0C \u5982\u679C\u4E3Atrue\uFF0C\u8FD4\u56DE\u5F53\u524D\u5143\u7D20</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
       <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> element
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> 
   <span class="token keyword">return</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">findIndex</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u904D\u5386\u5F53\u524D\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\uFF0C\u8C03\u7528callback\u5F97\u5230\u4E00\u4E2A \u5E03\u5C14\u503C\uFF0C \u5982\u679C\u4E3Atrue\uFF0C\u8FD4\u56DE\u5F53\u524D\u5143\u7D20\u7684\u4E0B\u6807</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
       <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> index
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> 
   <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">every</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u904D\u5386\u5F53\u524D\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\uFF0C\u8C03\u7528callback\u5F97\u5230\u4E00\u4E2A \u5E03\u5C14\u503C\uFF0C\u4E00\u65E6\u662Ffalse,\u8FD4\u56DEfalse</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
       <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> 
   <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">some</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u904D\u5386\u5F53\u524D\u6570\u7EC4\u6BCF\u4E2A\u5143\u7D20\uFF0C\u8C03\u7528callback\u5F97\u5230\u4E00\u4E2A \u5E03\u5C14\u503C\uFF0C\u4E00\u65E6\u662Ftrue,\u8FD4\u56DEtrue</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span>
       <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> 
   <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6570\u7EC4\u53BB\u91CD-unique" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD-unique" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD(unique)</h2><p>\u6839\u636E\u5F53\u524D\u6570\u7EC4\u4EA7\u751F\u4E00\u4E2A\u53BB\u9664\u91CD\u590D\u5143\u7D20\u540E\u7684\u65B0\u6570\u7EC4</p><h3 id="\u5229\u7528foreach-\u548Cindexof" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528foreach-\u548Cindexof" aria-hidden="true">#</a> \u5229\u7528forEach()\u548CindexOf()</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">unique1</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;unique1()&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u904D\u5386\u539F\u6570\u7EC4</span>
  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u6709\u5F53item\u4E0D\u5728arr\u4E2D, \u624D\u6DFB\u52A0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">===</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5185\u90E8\u5305\u542B\u9690\u5F0F\u904D\u5386</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u672C\u8D28\u662F\u53CC\u91CD\u904D\u5386, \u6548\u7387\u5DEE\u4E9B</p></div><h3 id="\u5229\u7528foreach-\u5BF9\u8C61\u5BB9\u5668" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528foreach-\u5BF9\u8C61\u5BB9\u5668" aria-hidden="true">#</a> \u5229\u7528forEach() + \u5BF9\u8C61\u5BB9\u5668</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unique2</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> contain <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u5C5E\u6027\u540D\u662Fitem, \u5C5E\u6027\u503Ctrue</span>
  <span class="token comment">// \u904D\u5386\u539F\u6570\u7EC4</span>
  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EA\u6709\u5F53item\u4E0D\u5728arr\u4E2D, \u624D\u6DFB\u52A0</span>
    <span class="token comment">// if (!contain[item]) {</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>contain<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4E0D\u9700\u8981\u904D\u5386</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
      contain<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u53EA\u9700\u4E00\u91CD\u904D\u5386, \u6548\u7387\u9AD8\u4E9B</p></div><h3 id="\u5229\u7528es6\u8BED\u6CD5-from-set-\u6216\u8005-set" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528es6\u8BED\u6CD5-from-set-\u6216\u8005-set" aria-hidden="true">#</a> \u5229\u7528ES6\u8BED\u6CD5: from + Set \u6216\u8005 ... + Set</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unique3</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// return Array.from(new Set(array))</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u7F16\u7801\u7B80\u6D01</p></div><h2 id="\u6570\u7EC4\u5408\u5E76-concat-\u4E0E\u5207\u7247-slice" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5408\u5E76-concat-\u4E0E\u5207\u7247-slice" aria-hidden="true">#</a> \u6570\u7EC4\u5408\u5E76(concat)\u4E0E\u5207\u7247(slice)</h2><h3 id="\u5408\u5E76concat" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76concat" aria-hidden="true">#</a> \u5408\u5E76concat()</h3><ul><li>\u8BED\u6CD5: var new_array = concat(array, value1[, value2[, ...[, valueN]]])</li><li>\u529F\u80FD: \u5C06n\u4E2A\u6570\u7EC4\u6216\u503C\u4E0E\u5F53\u524D\u6570\u7EC4\u5408\u5E76\u751F\u6210\u4E00\u4E2A\u65B0\u6570\u7EC4, \u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">concat</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> <span class="token operator">...</span>values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span>
  <span class="token comment">// \u904D\u5386values, \u5C06value\u6216\u8005value\u4E2D\u7684\u5143\u7D20\u6DFB\u52A0arr\u4E2D</span>
  values<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u5207\u7247slice" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247slice" aria-hidden="true">#</a> \u5207\u7247slice()</h3><ul><li>\u8BED\u6CD5: var new_array = slice(array, [begin[, end]])</li><li>\u529F\u80FD: \u8FD4\u56DE\u4E00\u4E2A\u7531 begin \u548C end \u51B3\u5B9A\u7684\u539F\u6570\u7EC4\u7684\u6D45\u62F7\u8D1D, \u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u88AB\u6539\u53D8</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">slice</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> begin<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token comment">// \u5982\u679C\u539F\u6570\u7EC4\u662F\u7A7A\u7EC4\u4EF6, \u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5904\u7406\u6CA1\u6709\u6307\u5B9A</span>
  begin <span class="token operator">=</span> begin <span class="token operator">||</span> <span class="token number">0</span>
  end <span class="token operator">=</span> end <span class="token operator">||</span> array<span class="token punctuation">.</span>length
  <span class="token comment">// \u8303\u56F4\u7684\u9650\u5236</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>begin<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    begin <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end<span class="token operator">&gt;</span>array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    end <span class="token operator">=</span> array<span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5148\u5B9E\u73B0\u4E3B\u4F53\u64CD\u4F5C</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> begin<span class="token punctuation">;</span> index <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6570\u7EC4\u6241\u5E73\u5316-flatten" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6241\u5E73\u5316-flatten" aria-hidden="true">#</a> \u6570\u7EC4\u6241\u5E73\u5316(flatten)</h2><h3 id="\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3" aria-hidden="true">#</a> \u7406\u89E3</h3><ul><li>\u53D6\u51FA\u5D4C\u5957\u6570\u7EC4(\u591A\u7EF4)\u4E2D\u7684\u6240\u6709\u5143\u7D20\u653E\u5230\u4E00\u4E2A\u65B0\u6570\u7EC4(\u4E00\u7EF4)\u4E2D</li><li>\u5982: [1, [3, [2, 4]]] ==&gt; [1, 3, 2, 4]</li></ul><h3 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h3><ul><li>\u65B9\u6CD5\u4E00: \u9012\u5F52 + reduce() + concat()</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten1</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">reduce</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pre<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      pre <span class="token operator">=</span> <span class="token function">concat</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> <span class="token function">flatten1</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> pre
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>\u65B9\u6CD5\u4E8C: ... + some() + concat()</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten2</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>array<span class="token punctuation">)</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">some</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// arr\u4E2D\u6709\u5143\u7D20\u662F\u6570\u7EC4</span>
    arr <span class="token operator">=</span> <span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>arr<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span> 
</code></pre></div><h2 id="\u6570\u7EC4\u53D6\u771F\u4E0E\u5206\u5757" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53D6\u771F\u4E0E\u5206\u5757" aria-hidden="true">#</a> \u6570\u7EC4\u53D6\u771F\u4E0E\u5206\u5757</h2><h3 id="compact-array" tabindex="-1"><a class="header-anchor" href="#compact-array" aria-hidden="true">#</a> compact(array)</h3><p>\u8FD4\u56DE\u6570\u7EC4\u4E2D\u6240\u6709\u771F\u503C\u5143\u7D20\u7EC4\u6210\u7684\u65B0\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">compact</span> <span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">filter</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="chunk-array-size" tabindex="-1"><a class="header-anchor" href="#chunk-array-size" aria-hidden="true">#</a> chunk(array, size)</h3><p>\u5C06\u6570\u7EC4\u62C6\u5206\u6210\u591A\u4E2A size \u957F\u5EA6\u7684\u533A\u5757\uFF0C\u6BCF\u4E2A\u533A\u5757\u7EC4\u6210\u5C0F\u6570\u7EC4,\u6574\u4F53\u7EC4\u6210\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">chunk</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> bigArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> smallArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u5982\u679C\u662F\u7A7A\u6570\u7EC4, \u76F4\u63A5\u8FD4\u56DE\u7A7A\u6570\u7EC4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> bigArr
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5904\u7406size</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>size<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    size <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token punctuation">}</span> <span class="token comment">/* else if (size&gt;array.length) {
    size = array.length
  } */</span>

  array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u5C06\u5C0F\u6570\u7EC4bigArr\u4E2D(\u53EA\u80FD\u653E\u4E00\u6B21)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallArr<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bigArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>smallArr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5C06\u5143\u7D20\u6DFB\u52A0\u5230\u5C0F\u6570\u7EC4</span>
    smallArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>

    <span class="token comment">// \u9650\u5236smallArr\u7684\u6700\u5927\u957F\u5EA6\u662Fsize</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>smallArr<span class="token punctuation">.</span>length<span class="token operator">===</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      smallArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> bigArr
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6570\u7EC4\u53D6\u5DEE\u5F02\u4E0E\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53D6\u5DEE\u5F02\u4E0E\u5408\u5E76" aria-hidden="true">#</a> \u6570\u7EC4\u53D6\u5DEE\u5F02\u4E0E\u5408\u5E76</h2><h3 id="difference-arr1-arr2" tabindex="-1"><a class="header-anchor" href="#difference-arr1-arr2" aria-hidden="true">#</a> difference(arr1, arr2)</h3><ul><li><p>\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u4E2D\u6240\u6709\u4E0D\u5728arr\u4E2D\u7684\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4(\u4E0D\u6539\u53D8\u539F\u6570\u7EC4)</p></li><li><p>\u5982: difference([1,3,5,7], [5, 8]) ==&gt; [1, 3, 7]</p></li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>filter<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./declares&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">difference</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> arr2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// \u5904\u7406\u7279\u522B\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arr2<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// \u5BF9\u6570\u7EC4\u8FDB\u884C\u8FC7\u6EE4</span>
  <span class="token keyword">return</span> <span class="token function">filter</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> arr2<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">===</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">differences</span><span class="token punctuation">(</span><span class="token parameter">arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arrays</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token comment">// \u5904\u7406\u7279\u522B\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr1<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arrays<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// \u5BF9\u6570\u7EC4\u8FDB\u884C\u8FC7\u6EE4</span>
  <span class="token keyword">return</span> <span class="token function">filter</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u5047\u8BBE\u5F53\u524D\u5143\u7D20\u5728\u540E\u9762\u7684\u6240\u6709\u6570\u7EC4\u90FD\u4E0D\u5B58\u5728</span>
    <span class="token comment">/* arrays.forEach(array =&gt; {
      const index = array.indexOf(item)
      if (index!==-1) {
        result = false
      }
    }) */</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arrays<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> array <span class="token operator">=</span> arrays<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token keyword">break</span> <span class="token comment">// \u7ED3\u675F\u5F53\u524Dfor\u5FAA\u73AF</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="mergearray-arr1-arr2" tabindex="-1"><a class="header-anchor" href="#mergearray-arr1-arr2" aria-hidden="true">#</a> mergeArray(arr1, arr2)</h3><ul><li><p>\u5C06arr2\u4E0Earr1\u7684\u5143\u7D20\u8FDB\u884C\u5408\u5E76\u7EC4\u6210\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4(\u4E0D\u6539\u53D8\u539F\u6570\u7EC4)</p></li><li><p>\u5982: mergeArray([1,3,5,7,5], [5, 8]) ==&gt; [1, 3, 5, 7, 5, 8]</p></li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mergeArray</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> <span class="token operator">...</span>arrays</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>arrays<span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  arrays<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">itemArr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    itemArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">===</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20" aria-hidden="true">#</a> \u5220\u9664\u6570\u7EC4\u4E2D\u90E8\u5206\u5143\u7D20</h2><h3 id="pull-array-values" tabindex="-1"><a class="header-anchor" href="#pull-array-values" aria-hidden="true">#</a> pull(array, ...values)</h3><ul><li>\u5220\u9664\u539F\u6570\u7EC4\u4E2D\u4E0Evalue\u76F8\u540C\u7684\u5143\u7D20, \u8FD4\u56DE\u6240\u6709\u5220\u9664\u5143\u7D20\u7684\u6570\u7EC4</li><li>\u8BF4\u660E: \u539F\u6570\u7EC4\u53D1\u751F\u4E86\u6539\u53D8</li><li>\u5982: pull([1,3,5,3,7], 2, 7, 3, 7) ===&gt; \u539F\u6570\u7EC4\u53D8\u4E3A[1, 5], \u8FD4\u56DE\u503C\u4E3A[3,3,7]</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pull</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> <span class="token operator">...</span>values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">!==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u6709</span>
      <span class="token comment">// \u5220\u9664item</span>
      array<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token comment">// \u5C06item\u6DFB\u52A0\u5230result\u6570\u7EC4</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
      index<span class="token operator">--</span> <span class="token comment">// \u5982\u679C\u4E0D\u505A, \u4E0B\u4E00\u4E2A\u5143\u7D20\u5C31\u6CA1\u6709\u5F97\u5230\u904D\u5386</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre></div><h3 id="pullall-array-values" tabindex="-1"><a class="header-anchor" href="#pullall-array-values" aria-hidden="true">#</a> pullAll(array, values)</h3><ul><li>\u529F\u80FD\u4E0Epull\u4E00\u81F4, \u53EA\u662F\u53C2\u6570\u53D8\u4E3A\u6570\u7EC4</li><li>\u5982: pullAll([1,3,5,3,7], [2, 7, 3, 7]) ===&gt; \u6570\u7EC41\u53D8\u4E3A[1, 5], \u8FD4\u56DE\u503C\u4E3A[3,3,7]</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pullAll</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">pull</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token operator">...</span>values<span class="token punctuation">)</span> <span class="token comment">// \u81EA\u5B9A\u4E49\u51FD\u6570</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20" aria-hidden="true">#</a> \u5F97\u5230\u6570\u7EC4\u7684\u90E8\u5206\u5143\u7D20</h2><h3 id="drop-array-count" tabindex="-1"><a class="header-anchor" href="#drop-array-count" aria-hidden="true">#</a> drop(array, count)</h3><ul><li>\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u8FC7\u6EE4\u6389\u5DE6\u8FB9count\u4E2A\u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4</li><li>\u8BF4\u660E: \u4E0D\u6539\u53D8\u5F53\u524D\u6570\u7EC4, count\u9ED8\u8BA4\u662F1</li><li>\u5982: drop([1,3,5,7], 2) ===&gt; [5, 7]</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">drop</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index<span class="token operator">&gt;=</span>count<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="dropright-array-count" tabindex="-1"><a class="header-anchor" href="#dropright-array-count" aria-hidden="true">#</a> dropRight(array, count)</h3><ul><li>\u5F97\u5230\u5F53\u524D\u6570\u7EC4\u8FC7\u6EE4\u6389\u53F3\u8FB9count\u4E2A\u540E\u5269\u4F59\u5143\u7D20\u7EC4\u6210\u7684\u6570\u7EC4</li><li>\u8BF4\u660E: \u4E0D\u6539\u53D8\u5F53\u524D\u6570\u7EC4, count\u9ED8\u8BA4\u662F1</li><li>\u5982: dropRight([1,3,5,7], 2) ===&gt; [1, 3]</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dropRight</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>count<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index<span class="token operator">&lt;</span>array<span class="token punctuation">.</span>length<span class="token operator">-</span>count<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,61),e=[o];function c(l,u){return a(),s("div",null,e)}var k=n(t,[["render",c],["__file","array.html.vue"]]);export{k as default};
