import{_ as n,o as s,c as a,a as t}from"./app.d64d29bc.js";const p={},o=t(`<h1 id="\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61" aria-hidden="true">#</a> \u5BF9\u8C61</h1><h2 id="\u81EA\u5B9A\u4E49new\u548Cinstanceof\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49new\u548Cinstanceof\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49new\u548Cinstanceof\u5DE5\u5177\u51FD\u6570</h2><h3 id="\u81EA\u5B9A\u4E49new\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49new\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49new\u5DE5\u5177\u51FD\u6570</h3><ul><li>\u8BED\u6CD5: newInstance(Fn, ...args)</li><li>\u529F\u80FD: \u521B\u5EFAFn\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\u5BF9\u8C61</li><li>\u5B9E\u73B0: \u521B\u5EFA\u7A7A\u5BF9\u8C61obj, \u8C03\u7528Fn\u6307\u5B9Athis\u4E3Aobj, \u8FD4\u56DEobj</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token parameter">Fn<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7A7A\u5BF9\u8C61</span>
  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// \u8C03\u7528Fn\u51FD\u6570, \u4E14\u6307\u5B9Athis\u662F\u65B0\u521B\u5EFA\u5BF9\u8C61</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">Fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
  <span class="token comment">// \u5982\u679CFn\u6267\u884C\u8FD4\u56DE\u7684\u662F\u5BF9\u8C61\u7C7B\u578B, \u6700\u7EC8\u7684\u7ED3\u679C\u5C31\u662F\u8FD9\u4E2A\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8BA9\u539F\u578B\u5BF9\u8C61\u662F\u7A7A\u7684object\u5BF9\u8C61, \u4E14constructor\u5C5E\u6027\u4E3AFn</span>
  <span class="token comment">/* 
  obj.__proto__ = {}
  obj.__proto__.constructor = Fn
  \u95EE\u9898: \u521B\u5EFA\u6BCF\u4E2A\u5B9E\u4F8B\u7684\u539F\u578B\u5BF9\u8C61\u4E0D\u662F\u540C\u4E00\u4E2A(\u5B9E\u9645\u8981\u6C42\u7684\u662F\u540C\u4E00\u4E2A)
  */</span>
  obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">Fn</span><span class="token punctuation">.</span>prototype  <span class="token comment">// \u5C06\u6784\u9020\u51FD\u6570\u7684\u663E\u793A\u539F\u578B\u5C5E\u6027\u503C\u8D4B\u503C\u5B9E\u4F8B\u5BF9\u8C61\u7684\u9690\u5F0F\u539F\u578B\u5C5E\u6027</span>

  <span class="token comment">// \u8FD4\u56DE\u65B0\u5EFA\u7684\u5BF9\u8C61</span>
  <span class="token keyword">return</span> obj
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u81EA\u5B9A\u4E49instanceof\u5DE5\u5177\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49instanceof\u5DE5\u5177\u51FD\u6570" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49instanceof\u5DE5\u5177\u51FD\u6570</h3><ul><li>\u8BED\u6CD5: myInstanceOf(obj, Type)</li><li>\u529F\u80FD: \u5224\u65ADobj\u662F\u5426\u662FType\u7C7B\u578B\u7684\u5B9E\u4F8B</li><li>\u5B9E\u73B0: Type\u7684\u539F\u578B\u5BF9\u8C61\u662F\u5426\u662Fobj\u7684\u539F\u578B\u94FE\u4E0A\u7684\u67D0\u4E2A\u5BF9\u8C61, \u5982\u679C\u662F\u8FD4\u56DEtru, \u5426\u5219\u8FD4\u56DEfalse</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myInstanceOf</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> Type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F97\u5230\u4E00\u4E2A\u539F\u578B\u5BF9\u8C61</span>
  <span class="token keyword">let</span> protoObj <span class="token operator">=</span> obj<span class="token punctuation">.</span>__proto__
  <span class="token keyword">while</span> <span class="token punctuation">(</span>protoObj <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5B58\u5728\u539F\u578B\u5BF9\u8C61</span>
    <span class="token comment">// \u5982\u679C\u5C31\u662FType\u7684\u539F\u578B\u5BF9\u8C61, \u76F4\u63A5\u8FD4\u56DEtrue</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>protoObj <span class="token operator">===</span> <span class="token class-name">Type</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span> 
    <span class="token comment">// \u53D6\u51FA\u4E0B\u4E00\u4E2A\u539F\u578B\u5BF9\u8C61, \u5E76\u4FDD\u5B58</span>
    protoObj <span class="token operator">=</span> protoObj<span class="token punctuation">.</span>__proto__
  <span class="token punctuation">}</span>
  <span class="token comment">// \u51FA\u4E86\u5FAA\u73AF, \u8BF4\u660E\u7C7B\u578B\u4E0D\u5339\u914D</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61" aria-hidden="true">#</a> \u5408\u5E76\u591A\u4E2A\u5BF9\u8C61</h2><ul><li>\u8BED\u6CD5: object mergeObject(...objs)</li><li>\u529F\u80FD: \u5408\u5E76\u591A\u4E2A\u5BF9\u8C61, \u8FD4\u56DE\u4E00\u4E2A\u5408\u5E76\u540E\u5BF9\u8C61(\u4E0D\u6539\u53D8\u539F\u5BF9\u8C61)</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> concat <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../array/concat&#39;</span>
<span class="token keyword">function</span> <span class="token function">mergeObject</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>objs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  objs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">obj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token comment">// result\u4E2D\u6CA1\u6709key\u5C5E\u6027</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// result\u4E2D\u6709key\u5C5E\u6027</span>
        <span class="token comment">// \u5BF9\u539F\u503C\u4E0Evalue\u8FDB\u884C\u5408\u5E76\u751F\u6210\u65B0\u7684\u6570\u7EC4</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5BF9\u8C61-\u6570\u7EC4\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61-\u6570\u7EC4\u62F7\u8D1D" aria-hidden="true">#</a> \u5BF9\u8C61/\u6570\u7EC4\u62F7\u8D1D</h2><ol><li>\u533A\u522B\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D</li></ol><ul><li>\u7EAF\u8BED\u8A00\u8868\u8FBE: <ul><li>\u6D45\u62F7\u8D1D: \u53EA\u662F\u590D\u5236\u4E86\u5BF9\u8C61\u5C5E\u6027\u6216\u6570\u7EC4\u5143\u7D20\u672C\u8EAB(\u53EA\u662F\u5F15\u7528\u5730\u5740\u503C)</li><li>\u6DF1\u62F7\u8D1D: \u4E0D\u4EC5\u590D\u5236\u4E86\u5BF9\u8C61\u5C5E\u6027\u6216\u6570\u7EC4\u5143\u7D20\u672C\u8EAB, \u8FD8\u590D\u5236\u4E86\u6307\u5411\u7684\u5BF9\u8C61(\u4F7F\u7528\u9012\u5F52)</li></ul></li><li>\u4E3E\u4F8B\u8BF4\u660E: persons\u62F7\u8D1D <ul><li>\u6D45\u62F7\u8D1D: \u53EA\u662F\u62F7\u8D1D\u4E86\u6BCF\u4E2Aperson\u5BF9\u8C61\u7684\u5F15\u7528\u5730\u5740\u503C, \u6BCF\u4E2Aperson\u5BF9\u8C61\u53EA\u6709\u4E00\u4EFD</li><li>\u6DF1\u62F7\u8D1D: \u6BCF\u4E2Aperson\u5BF9\u8C61\u4E5F\u88AB\u590D\u5236\u4E86\u4E00\u4EFD\u65B0\u7684</li></ul></li></ul><ol start="2"><li>\u5B9E\u73B0\u6D45\u62F7\u8D1D</li></ol><ul><li>\u65B9\u6CD5\u4E00: \u5229\u7528ES6\u8BED\u6CD5</li><li>\u65B9\u6CD5\u4E8C: \u5229\u7528ES5\u8BED\u6CD5</li></ul><ol start="3"><li>\u5B9E\u73B0\u6DF1\u62F7\u8D1D</li></ol><ul><li>1). \u5927\u4F17\u4E5E\u4E10\u7248 <ul><li>\u95EE\u98981: \u51FD\u6570\u5C5E\u6027\u4F1A\u4E22\u5931</li><li>\u95EE\u98982: \u5FAA\u73AF\u5F15\u7528\u4F1A\u51FA\u9519</li></ul></li><li>2). \u9762\u8BD5\u57FA\u7840\u7248\u672C <ul><li>\u89E3\u51B3\u95EE\u98981: \u51FD\u6570\u5C5E\u6027\u8FD8\u6CA1\u4E22\u5931</li></ul></li><li>3). \u9762\u8BD5\u52A0\u5F3A\u7248\u672C <ul><li>\u89E3\u51B3\u95EE\u98982: \u5FAA\u73AF\u5F15\u7528\u6B63\u5E38</li></ul></li><li>4). \u9762\u8BD5\u52A0\u5F3A\u7248\u672C2(\u4F18\u5316\u904D\u5386\u6027\u80FD) <ul><li>\u6570\u7EC4: while | for | forEach() \u4F18\u4E8E for-in | keys()&amp;forEach()</li><li>\u5BF9\u8C61: for-in \u4E0E keys()&amp;forEach() \u5DEE\u4E0D\u591A</li></ul></li></ul><h3 id="\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h3><p>\u5229\u7528ES6\u8BED\u6CD5:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code> <span class="token function">clone1</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// return [...target]</span>
    <span class="token comment">// return target.slice()</span>
    <span class="token comment">// return [].concat(target)</span>
    <span class="token comment">// return Array.from(target)</span>
    <span class="token comment">// return target.filter(value =&gt; true)</span>
    <span class="token comment">// return target.map(item =&gt; item)</span>
    <span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      pre<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
      <span class="token keyword">return</span> pre
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span>target<span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// \u5982\u679C\u4E0D\u662F\u6570\u7EC4\u6216\u5BF9\u8C61, \u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5229\u7528ES5\u8BED\u6CD5: for...in</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">clone2</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u88AB\u5904\u7406\u7684\u76EE\u6807\u662F\u6570\u7EC4/\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">||</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cloneTarget <span class="token operator">=</span> target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h3><p>deepClone1</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone1</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>deepClone2</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">deepClone2</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u88AB\u5904\u7406\u7684\u76EE\u6807\u662F\u6570\u7EC4/\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">||</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cloneTarget <span class="token operator">=</span> target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u53EA\u904D\u5386\u5BF9\u8C61\u81EA\u8EAB\u7684\u5C5E\u6027</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone2</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// \u5BF9\u5C5E\u6027\u503C\u8FDB\u884C\u9012\u5F52\u5904\u7406</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u89E3\u51B3\u4E86: \u51FD\u6570\u5C5E\u6027\u4F1A\u4E22\u5931 \u95EE\u9898: \u5FAA\u73AF\u5F15\u7528\u4F1A\u51FA\u9519</p></div><p>deepClone3</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">deepClone3</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u88AB\u5904\u7406\u7684\u76EE\u6807\u662F\u6570\u7EC4/\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">||</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// map\u4E2D\u5B58\u5728\u5BF9\u5E94\u7684\u514B\u9686\u5BF9\u8C61, \u76F4\u63A5\u5C06\u5176\u8FD4\u56DE</span>
    <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cloneTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> cloneTarget <span class="token comment">// \u4E0D\u8981\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u8FDB\u884C\u591A\u6B21clone</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u514B\u9686\u5BF9\u8C61</span>
    cloneTarget <span class="token operator">=</span> target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">// \u4FDD\u5B58\u5230map\u5BB9\u5668</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone3</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span>  <span class="token comment">// \u5BF9\u5C5E\u6027\u503C\u8FDB\u884C\u9012\u5F52\u5904\u7406</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u89E3\u51B3\u4E86: \u51FD\u6570\u5C5E\u6027\u4F1A\u4E22\u5931 \u89E3\u51B3: \u5FAA\u73AF\u5F15\u7528\u4F1A\u51FA\u9519<br> \u89E3\u51B3\u601D\u8DEF: \u76EE\u6807: \u540C\u4E00\u4E2A\u5BF9\u65EC/\u6570\u7EC4\u53EA\u80FD\u88AB\u514B\u96861\u6B21 \u521B\u5EFA\u514B\u9686\u5BF9\u8C61\u524D:\u3000\u5982\u679C\u514B\u9686\u5BF9\u8C61\u5DF2\u7ECF\u5B58\u5728, \u76F4\u63A5\u8FD4\u56DE \u521B\u5EFA\u514B\u9686\u5BF9\u8C61\u540E: \u4FDD\u5B58\u514B\u9686\u5BF9\u8C61 \u7F13\u5B58\u5BB9\u5668\u7ED3\u6784: Map key: target, value: cloneTaget</p></div><p>deepClone4:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">deepClone4</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> map<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u88AB\u5904\u7406\u7684\u76EE\u6807\u662F\u6570\u7EC4/\u5BF9\u8C61</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">||</span> <span class="token punctuation">(</span>target<span class="token operator">!==</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> target<span class="token operator">===</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// map\u4E2D\u5B58\u5728\u5BF9\u5E94\u7684\u514B\u9686\u5BF9\u8C61, \u76F4\u63A5\u5C06\u5176\u8FD4\u56DE</span>
    <span class="token keyword">let</span> cloneTarget <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cloneTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> cloneTarget <span class="token comment">// \u4E0D\u8981\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u8FDB\u884C\u591A\u6B21clone</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u521B\u5EFA\u514B\u9686\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cloneTarget <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token comment">// \u4FDD\u5B58\u5230map\u5BB9\u5668</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>
      <span class="token comment">// \u5411\u6570\u7EC4\u6DFB\u52A0\u5143\u7D20</span>
      target<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        cloneTarget<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> map<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      cloneTarget <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      <span class="token comment">// \u4FDD\u5B58\u5230map\u5BB9\u5668</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> cloneTarget<span class="token punctuation">)</span>
      <span class="token comment">// \u5411\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          cloneTarget<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone4</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span>  <span class="token comment">// \u5BF9\u5C5E\u6027\u503C\u8FDB\u884C\u9012\u5F52\u5904\u7406</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> cloneTarget
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u4F18\u5316\u6570\u7EC4\u7684\u904D\u5386: \u4E0D\u7528for...in, \u800C\u7528forEach</p></div>`,35),e=[o];function c(l,u){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","object.html.vue"]]);export{r as default};
