import{_ as n,o as s,c as a,e as p}from"./app.94858b64.js";var t="/blog/assets/bubble.287f9a70.gif",o="/blog/assets/selection.d403a31f.gif",e="/blog/assets/quick.f1fb01cc.gif",c="/blog/assets/insertion.4cd822c8.gif",l="/blog/assets/shell.f29f6906.gif";const r={},u=p('<h1 id="\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F" aria-hidden="true">#</a> \u6392\u5E8F</h1><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h2><p><img src="'+t+`" alt="bubble"></p><p>\u539F\u7406\uFF1A</p><ul><li>\u5192\u6CE1\u6392\u5E8F\u53EA\u4F1A\u64CD\u4F5C\u76F8\u90BB\u7684\u4E24\u4E2A\u6570\u636E</li><li>\u6BCF\u6B21\u5192\u6CE1\u64CD\u4F5C\u90FD\u4F1A\u5BF9\u76F8\u90BB\u7684\u4E24\u4E2A\u5143\u7D20\u8FDB\u884C\u6BD4\u8F83\uFF0C\u770B\u662F\u5426\u6EE1\u8DB3\u5927\u5C0F\u5173\u7CFB\u8981\u6C42\u3002\u5982\u679C\u4E0D\u6EE1\u8DB3\u5C31\u8BA9\u5B83\u4FE9\u4E92\u6362</li><li>\u4E00\u6B21\u5192\u6CE1\u4F1A\u8BA9\u81F3\u5C11\u4E00\u4E2A\u5143\u7D20\u79FB\u52A8\u5230\u5B83\u5E94\u8BE5\u5728\u7684\u4F4D\u7F6E\uFF0C\u91CD\u590D n \u6B21\uFF0C\u5C31\u5B8C\u6210\u4E86 n \u4E2A\u6570\u636E\u7684\u6392\u5E8F\u5DE5\u4F5C</li></ul><p>\u7279\u70B9\uFF1A</p><ul><li>\u4F18\u70B9\uFF1A\u6392\u5E8F\u7B97\u6CD5\u7684\u57FA\u7840\uFF0C\u7B80\u5355\u5B9E\u7528\u6613\u4E8E\u7406\u89E3</li><li>\u7F3A\u70B9\uFF1A\u6BD4\u8F83\u6B21\u6570\u591A\uFF0C\u6548\u7387\u8F83\u4F4E</li></ul><p>\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">bubbleSort</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
  <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token comment">// i &lt; length - 1 \u662F\u56E0\u4E3A\u5916\u5C42\u53EA\u9700\u8981 length-1 \u6B21\u5C31\u6392\u597D\u4E86\uFF0C\u7B2C length \u6B21\u6BD4\u8F83\u662F\u591A\u4F59\u7684\u3002</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> hasChange <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u63D0\u524D\u9000\u51FA\u5192\u6CE1\u5FAA\u73AF\u7684\u6807\u5FD7\u4F4D</span>
    <span class="token comment">// j &lt; length - i - 1 \u662F\u56E0\u4E3A\u5185\u5C42\u7684 length-i-1 \u5230 length-1 \u7684\u4F4D\u7F6E\u5DF2\u7ECF\u6392\u597D\u4E86\uFF0C\u4E0D\u9700\u8981\u518D\u6BD4\u8F83\u4E00\u6B21\u3002</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp
        hasChange <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u8868\u793A\u6709\u6570\u636E\u4EA4\u6362</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C false \u8BF4\u660E\u6240\u6709\u5143\u7D20\u5DF2\u7ECF\u5230\u4F4D\uFF0C\u6CA1\u6709\u6570\u636E\u4EA4\u6362\uFF0C\u63D0\u524D\u9000\u51FA</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasChange<span class="token punctuation">)</span> <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h2><p>\u539F\u7406\uFF1A</p><p><img src="`+o+`" alt="selection"></p><ul><li>\u9996\u5148\u5728\u672A\u6392\u5E8F\u5E8F\u5217\u4E2D\u627E\u5230\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u5B58\u653E\u5230\u6392\u5E8F\u5E8F\u5217\u7684\u8D77\u59CB\u4F4D\u7F6E\u3002</li><li>\u518D\u4ECE\u5269\u4F59\u672A\u6392\u5E8F\u5143\u7D20\u4E2D\u7EE7\u7EED\u5BFB\u627E\u6700\u5C0F\uFF08\u5927\uFF09\u5143\u7D20\uFF0C\u7136\u540E\u653E\u5230\u5DF2\u6392\u5E8F\u5E8F\u5217\u7684\u672B\u5C3E\u3002</li><li>\u91CD\u590D\u7B2C\u4E8C\u6B65\uFF0C\u76F4\u5230\u6240\u6709\u5143\u7D20\u5747\u6392\u5E8F\u5B8C\u6BD5\u3002</li></ul><p>\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">selectionSort</span> <span class="token operator">=</span> <span class="token parameter">array</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length
  <span class="token keyword">let</span> minIndex<span class="token punctuation">,</span> temp
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    minIndex <span class="token operator">=</span> i
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BFB\u627E\u6700\u5C0F\u7684\u6570</span>
        minIndex <span class="token operator">=</span> j <span class="token comment">// \u5C06\u6700\u5C0F\u6570\u7684\u7D22\u5F15\u4FDD\u5B58</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    temp <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span>
    array<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> temp
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;array: &#39;</span><span class="token punctuation">,</span> array<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h2><p>\u5FEB\u901F\u6392\u5E8F\u7684\u7279\u70B9\u5C31\u662F\u5FEB\uFF0C\u800C\u4E14\u6548\u7387\u9AD8\uFF01\u5B83\u662F\u5904\u7406\u5927\u6570\u636E\u6700\u5FEB\u7684\u6392\u5E8F\u7B97\u6CD5\u4E4B\u4E00\u3002</p><p>\u539F\u7406\uFF1A</p><p><img src="`+e+`" alt="quick"></p><ul><li>\u5148\u627E\u5230\u4E00\u4E2A\u57FA\u51C6\u70B9\uFF08\u4E00\u822C\u6307\u6570\u7EC4\u7684\u4E2D\u90E8\uFF09\uFF0C\u7136\u540E\u6570\u7EC4\u88AB\u8BE5\u57FA\u51C6\u70B9\u5206\u4E3A\u4E24\u90E8\u5206\uFF0C\u4F9D\u6B21\u4E0E\u8BE5\u57FA\u51C6\u70B9\u6570\u636E\u6BD4\u8F83\uFF0C\u5982\u679C\u6BD4\u5B83\u5C0F\uFF0C\u653E\u5DE6\u8FB9\uFF1B\u53CD\u4E4B\uFF0C\u653E\u53F3\u8FB9\u3002</li><li>\u5DE6\u53F3\u5206\u522B\u7528\u4E00\u4E2A\u7A7A\u6570\u7EC4\u53BB\u5B58\u50A8\u6BD4\u8F83\u540E\u7684\u6570\u636E\u3002</li><li>\u6700\u540E\u9012\u5F52\u6267\u884C\u4E0A\u8FF0\u64CD\u4F5C\uFF0C\u76F4\u5230\u6570\u7EC4\u957F\u5EA6 &lt;= 1;</li></ul><p>\u7279\u70B9\uFF1A</p><ul><li>\u7279\u70B9\uFF1A\u5FEB\u901F\uFF0C\u5E38\u7528</li><li>\u7F3A\u70B9\uFF1A\u9700\u8981\u53E6\u5916\u58F0\u660E\u4E24\u4E2A\u6570\u7EC4\uFF0C\u6D6A\u8D39\u4E86\u5185\u5B58\u7A7A\u95F4\u8D44\u6E90</li></ul><p>\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">quickSort</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr
  <span class="token punctuation">}</span>
  <span class="token comment">//\u53D6\u57FA\u51C6\u70B9</span>
  <span class="token keyword">const</span> midIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token comment">//\u53D6\u57FA\u51C6\u70B9\u7684\u503C\uFF0Csplice(index,1) \u5219\u8FD4\u56DE\u7684\u662F\u542B\u6709\u88AB\u5220\u9664\u7684\u5143\u7D20\u7684\u6570\u7EC4\u3002</span>
  <span class="token keyword">const</span> valArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>midIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> midIndexVal <span class="token operator">=</span> valArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">//\u5B58\u653E\u6BD4\u57FA\u51C6\u70B9\u5C0F\u7684\u6570\u7EC4</span>
  <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">//\u5B58\u653E\u6BD4\u57FA\u51C6\u70B9\u5927\u7684\u6570\u7EC4</span>
  <span class="token comment">//\u904D\u5386\u6570\u7EC4\uFF0C\u8FDB\u884C\u5224\u65AD\u5206\u914D</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> midIndexVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//\u6BD4\u57FA\u51C6\u70B9\u5C0F\u7684\u653E\u5728\u5DE6\u8FB9\u6570\u7EC4</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//\u6BD4\u57FA\u51C6\u70B9\u5927\u7684\u653E\u5728\u53F3\u8FB9\u6570\u7EC4</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//\u9012\u5F52\u6267\u884C\u4EE5\u4E0A\u64CD\u4F5C\uFF0C\u5BF9\u5DE6\u53F3\u4E24\u4E2A\u6570\u7EC4\u8FDB\u884C\u64CD\u4F5C\uFF0C\u76F4\u5230\u6570\u7EC4\u957F\u5EA6\u4E3A &lt;= 1</span>
  <span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>midIndexVal<span class="token punctuation">,</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h2><p>\u539F\u7406\uFF1A</p><p><img src="`+c+`" alt="insertion"></p><p>\u901A\u8FC7\u6784\u5EFA\u6709\u5E8F\u5E8F\u5217\uFF0C\u5BF9\u4E8E\u672A\u6392\u5E8F\u6570\u636E\uFF0C\u5728\u5DF2\u6392\u5E8F\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF0C\u627E\u5230\u76F8\u5E94\u4F4D\u7F6E\u5E76\u63D2\u5165</p><ul><li>\u4ECE\u7B2C\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\uFF0C\u8BE5\u5143\u7D20\u53EF\u4EE5\u8BA4\u4E3A\u5DF2\u7ECF\u88AB\u6392\u5E8F\uFF1B</li><li>\u53D6\u51FA\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5728\u5DF2\u7ECF\u6392\u5E8F\u7684\u5143\u7D20\u5E8F\u5217\u4E2D\u4ECE\u540E\u5411\u524D\u626B\u63CF\uFF1B</li><li>\u5982\u679C\u8BE5\u5143\u7D20\uFF08\u5DF2\u6392\u5E8F\uFF09\u5927\u4E8E\u65B0\u5143\u7D20\uFF0C\u5C06\u8BE5\u5143\u7D20\u79FB\u5230\u4E0B\u4E00\u4F4D\u7F6E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA4 3\uFF0C\u76F4\u5230\u627E\u5230\u5DF2\u6392\u5E8F\u7684\u5143\u7D20\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u65B0\u5143\u7D20\u7684\u4F4D\u7F6E\uFF1B</li><li>\u5C06\u65B0\u5143\u7D20\u63D2\u5165\u5230\u8BE5\u4F4D\u7F6E\u540E\uFF1B</li><li>\u91CD\u590D\u6B65\u9AA4 2~5\u3002</li></ul><p>\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">insertionSort</span> <span class="token operator">=</span> <span class="token parameter">array</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length
  <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

  <span class="token keyword">let</span> preIndex<span class="token punctuation">,</span> current
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    preIndex <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">//\u5F85\u6BD4\u8F83\u5143\u7D20\u7684\u4E0B\u6807</span>
    current <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">//\u5F53\u524D\u5143\u7D20</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>preIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span> <span class="token operator">&gt;</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u524D\u7F6E\u6761\u4EF6\u4E4B\u4E00: \u5F85\u6BD4\u8F83\u5143\u7D20\u6BD4\u5F53\u524D\u5143\u7D20\u5927</span>
      array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>preIndex<span class="token punctuation">]</span> <span class="token comment">//\u5C06\u5F85\u6BD4\u8F83\u5143\u7D20\u540E\u79FB\u4E00\u4F4D</span>
      preIndex<span class="token operator">--</span> <span class="token comment">//\u6E38\u6807\u524D\u79FB\u4E00\u4F4D</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>preIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u907F\u514D\u540C\u4E00\u4E2A\u5143\u7D20\u8D4B\u503C\u7ED9\u81EA\u8EAB</span>
      array<span class="token punctuation">[</span>preIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> current <span class="token comment">//\u5C06\u5F53\u524D\u5143\u7D20\u63D2\u5165\u9884\u7559\u7A7A\u4F4D</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;array :&#39;</span><span class="token punctuation">,</span> array<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5E0C\u5C14\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5E0C\u5C14\u6392\u5E8F" aria-hidden="true">#</a> \u5E0C\u5C14\u6392\u5E8F</h2><p><img src="`+l+`" alt="shell"></p><p>\u539F\u7406\uFF1A</p><ul><li>\u5148\u5C06\u6574\u4E2A\u5F85\u6392\u5E8F\u7684\u8BB0\u5F55\u5E8F\u5217\u5206\u5272\u6210\u4E3A\u82E5\u5E72\u5B50\u5E8F\u5217\u3002</li><li>\u5206\u522B\u8FDB\u884C\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u3002</li><li>\u5F85\u6574\u4E2A\u5E8F\u5217\u4E2D\u7684\u8BB0\u5F55\u57FA\u672C\u6709\u5E8F\u65F6\uFF0C\u518D\u5BF9\u5168\u4F53\u8BB0\u5F55\u8FDB\u884C\u4F9D\u6B21\u76F4\u63A5\u63D2\u5165\u6392\u5E8F\u3002</li></ul><p>\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">shellSort</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    temp<span class="token punctuation">,</span>
    gap <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>gap <span class="token operator">&lt;</span> len <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u52A8\u6001\u5B9A\u4E49\u95F4\u9694\u5E8F\u5217</span>
    gap <span class="token operator">=</span> gap <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>gap<span class="token punctuation">;</span> gap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> gap <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>gap <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> gap<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">-</span> gap
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> temp<span class="token punctuation">;</span> j <span class="token operator">-=</span> gap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span>j <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      arr<span class="token punctuation">[</span>j <span class="token operator">+</span> gap<span class="token punctuation">]</span> <span class="token operator">=</span> temp
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div>`,37),k=[u];function i(d,m){return s(),a("div",null,k)}var h=n(r,[["render",i],["__file","sort.html.vue"]]);export{h as default};
