import{_ as n,o as s,c as a,e as t}from"./app.5bb0e60c.js";const p={},e=t(`<h1 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h1><h2 id="\u5B57\u7B26\u4E32\u5012\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u5012\u5E8F" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u5012\u5E8F</h2><ul><li>reverseString(str) \u751F\u6210\u4E00\u4E2A\u5012\u5E8F\u7684\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">reverseString</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u662F\u5426\u662F\u56DE\u6587</h2><ul><li>palindrome(str) \u5982\u679C\u7ED9\u5B9A\u7684\u5B57\u7B26\u4E32\u662F\u56DE\u6587\uFF0C\u5219\u8FD4\u56DE true \uFF1B\u5426\u5219\u8FD4\u56DE false</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">palindrome</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token operator">===</span><span class="token function">reverseString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u622A\u53D6\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u622A\u53D6\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u622A\u53D6\u5B57\u7B26\u4E32</h2><ul><li>truncate(str, num) \u5982\u679C\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u8D85\u8FC7\u4E86num, \u622A\u53D6\u524D\u9762num\u957F\u5EA6\u90E8\u5206, \u5E76\u4EE5...\u7ED3\u675F</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">truncate</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span>length<span class="token operator">&gt;</span>num <span class="token operator">?</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;...&#39;</span><span class="token operator">:</span> str
<span class="token punctuation">}</span>
</code></pre></div>`,10),c=[e];function o(r,u){return s(),a("div",null,c)}var i=n(p,[["render",o],["__file","string.html.vue"]]);export{i as default};
