import{_ as p,r as t,o,c as e,a as n,b as c,d as a,e as u}from"./app.b698a7af.js";const l={},k=n("h1",{id:"coding",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#coding","aria-hidden":"true"},"#"),a(" Coding")],-1),i={href:"https://juejin.cn/post/6844903809206976520#heading-16",target:"_blank",rel:"noopener noreferrer"},r=a("\u53C2\u8003"),d=u(`<h2 id="\u5B9E\u73B0new\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0new\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u5B9E\u73B0new\u64CD\u4F5C\u7B26</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6A21\u62DFnew\u64CD\u4F5C\u7B26
 * 1. \u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61obj
 * 2. \u7EE7\u627F\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61fn.prototype
 * 3. \u6267\u884C\u6784\u9020\u51FD\u6570\uFF0C\u5E76\u5C06this\u6307\u5411\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61obj
 * 4. \u5224\u65AD\u6267\u884C\u6784\u9020\u51FD\u6570\u8FD4\u56DE\u7684\u7ED3\u679Cres\uFF0C\u5982\u679Cres\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5219\u8FD4\u56DE\u8FD9\u4E2Ares\uFF0C\u5426\u5219\u8FD4\u56DE\u521B\u5EFA\u7684\u5BF9\u8C61obj
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">_new</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> <span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>fn<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> arg<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> res
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> obj
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u9A8C\u8BC1</span>
<span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token parameter">age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>
<span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token function">_new</span><span class="token punctuation">(</span><span class="token constant">C</span><span class="token punctuation">)</span>
o <span class="token keyword">instanceof</span> <span class="token class-name">C</span> <span class="token comment">// \u5224\u65AD\u5B9E\u4F8Bo\u662F\u4E0D\u662FM\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B,\u8FD4\u56DEtrue</span>
o <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> 
o<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor <span class="token operator">===</span> <span class="token constant">C</span> <span class="token comment">// \u5B9E\u4F8Bo\u7684\u539F\u578B\u5BF9\u8C61\u662F\u5426\u7B49\u4E8E\u6784\u9020\u51FD\u6570C</span>
<span class="token class-name">C</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;walk&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token comment">// \u5728\u6784\u9020\u51FD\u6570C\u7684\u539F\u578B\u4E0A\u589E\u52A0\u4E00\u4E2A\u65B9\u6CD5walk</span>
o<span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u5B9E\u73B0instanceof" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0instanceof" aria-hidden="true">#</a> \u5B9E\u73B0instanceOf</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6A21\u62DFinstanceof\u64CD\u4F5C\u7B26
 * 
 * \u68C0\u6D4B\u6784\u9020\u51FD\u6570\u7684\`prototype\`\u5C5E\u6027\u662F\u5426\u51FA\u73B0\u5728\u67D0\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A\uFF0C\u662F\u5219\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u8FD4\u56DEfalse
 * 1. \u83B7\u53D6\u5B9E\u4F8B\u7684\u539F\u578B\`proto\`
 * 2. \u83B7\u53D6\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\`prototype\`
 * 3. \u4F7F\u7528while\u5FAA\u73AF
 *    1\uFF09\u5982\u679C\u5B9E\u4F8B\u7684\u539F\u578Bproto\u4E3Anull\uFF0C\u8BF4\u660E\u6CA1\u6709\u627E\u5230\uFF0C\u8FD4\u56DE false
 *    2\uFF09\u5982\u679C\u5B9E\u4F8B\u7684\u539F\u578Bproto\u7B49\u4E8E\u6784\u9020\u51FD\u6570\u7684\u539F\u578Bprototype\uFF0C\u8BF4\u660E\u627E\u5230\u4E86\uFF0C\u8FD4\u56DE true
 *    3\uFF09\u5FAA\u73AF\u6761\u4EF6\u662F\uFF1A\u901A\u8FC7\u539F\u578B\u94FE\uFF0C\u4F9D\u6B21\u6BD4\u8F83\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u662F\u5426\u4E0E\u5B9E\u4F8B\u7684\u539F\u578B\u76F8\u7B49
 * 
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">_instanceof</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> proto <span class="token operator">=</span> left<span class="token punctuation">.</span>__proto__
  <span class="token keyword">let</span> prototype <span class="token operator">=</span> right<span class="token punctuation">.</span>prototype
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proto <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proto <span class="token operator">===</span> prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    proto <span class="token operator">=</span> proto<span class="token punctuation">.</span>__proto__
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token function">_instanceof</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Array<span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token function">_instanceof</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Object<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><h2 id="\u5B9E\u73B0call-apply-bind" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0call-apply-bind" aria-hidden="true">#</a> \u5B9E\u73B0call/apply/bind</h2><h3 id="call" tabindex="-1"><a class="header-anchor" href="#call" aria-hidden="true">#</a> call</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6A21\u62DFcall
 * \u8BED\u6CD5\uFF1Afunction.call(thisArg, arg1, arg2, ...)
 * 1. \u6539\u53D8this\u6307\u5411\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5982\u679C\u4E3Aundefined\u6216null\uFF0Cthis\u6307\u5411window\u5BF9\u8C61
 * 2. \u6267\u884C\u51FD\u6570
 * 
 */</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_call</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406obj\u662Fundefined\u6216\u8005null\u7684\u60C5\u51B5</span>
  obj <span class="token operator">=</span> obj <span class="token operator">||</span> window

  <span class="token comment">// \u7ED9obj\u6DFB\u52A0\u4E00\u4E2A\u65B9\u6CD5fn,\u8D4B\u503Cthis</span>
  obj<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token comment">// \u6267\u884Cfn\u65B9\u6CD5, \u4F20\u5165args\u53C2\u6570, \u62FF\u5230\u8FD4\u56DE\u503Cres</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token comment">// \u5220\u9664fn</span>
  <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>fn
  <span class="token comment">// \u8FD4\u56DEres</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><h3 id="apply" tabindex="-1"><a class="header-anchor" href="#apply" aria-hidden="true">#</a> apply</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6A21\u62DFapply
 * \u8BED\u6CD5\uFF1Afunc.apply(thisArg, [argsArray])
 * 1. \u6539\u53D8this\u6307\u5411\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5982\u679C\u4E3Aundefined\u6216null\uFF0Cthis\u6307\u5411window\u5BF9\u8C61
 * 2. \u6267\u884C\u51FD\u6570
 */</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_apply</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> argsArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406obj\u662Fundefined\u6216\u8005null\u7684\u60C5\u51B5</span>
  obj <span class="token operator">=</span> obj <span class="token operator">||</span> window

  <span class="token comment">// \u7ED9obj\u6DFB\u52A0\u4E00\u4E2A\u65B9\u6CD5fn\uFF0C\u8D4B\u503Cthis</span>
  obj<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token comment">// \u6267\u884Cfn, \u4F20\u5165\u53C2\u6570, \u5F97\u5230\u8FD4\u56DE\u503Cres</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>argsArr<span class="token punctuation">)</span>
  <span class="token comment">// \u5220\u9664fn</span>
  <span class="token keyword">delete</span> obj<span class="token punctuation">.</span>fn
  <span class="token comment">// \u8FD4\u56DEres</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

</code></pre></div><h3 id="bind" tabindex="-1"><a class="header-anchor" href="#bind" aria-hidden="true">#</a> bind</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u6A21\u62DFbind
 * \u8BED\u6CD5\uFF1Afunction.bind(thisArg[, arg1[, arg2[, ...]]])
 * 1. \u6539\u53D8this\u6307\u5411\uFF0C\u51FD\u6570\u4E0D\u6267\u884C
 */</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_bind</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u65B0\u51FD\u6570</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8C03\u7528\u539F\u6765\u51FD\u6570, \u6307\u5B9Athis\u4E3Aobj, \u53C2\u6570\u5217\u8868\u7531args\u548Cargs2\u4F9D\u6B21\u7EC4\u6210</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>args2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u624B\u5199\u9632\u6296\u548C\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u9632\u6296\u548C\u8282\u6D41" aria-hidden="true">#</a> \u624B\u5199\u9632\u6296\u548C\u8282\u6D41</h2><h3 id="\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u9632\u6296" aria-hidden="true">#</a> \u9632\u6296</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u9632\u6296
 * \u89C4\u5B9A\u65F6\u95F4\u5185\uFF0C\u89E6\u53D1\u4E8B\u4EF6\u591A\u6B21\uFF0C\u8BA9\u6700\u540E\u4E00\u6B21\u89E6\u53D1\u4E8B\u4EF6\u751F\u6548\uFF08\u4E0D\u65AD\u5237\u65B0\u8BA1\u65F6\u5668\uFF09
 * \u7528setTimeout+\u95ED\u5305\u5B9E\u73B0
 * \u5E94\u7528\uFF1A
 *      1\uFF09\u8F93\u5165\u6846\u5B9E\u65F6\u641C\u7D22\u8054\u60F3\uFF08keyup/input\uFF09
 */</span>
<span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> delay <span class="token operator">=</span> <span class="token number">200</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41" aria-hidden="true">#</a> \u8282\u6D41</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u8282\u6D41
 * \u89C4\u5B9A\u65F6\u95F4\u5185\uFF0C\u591A\u6B21\u89E6\u53D1\u53EA\u4F1A\u6267\u884C\u7B2C\u4E00\u6B21\u89E6\u53D1\u7684\u51FD\u6570
 * \u6807\u5FD7\u4F4D+\u5B9A\u65F6\u5668+\u95ED\u5305
 * \u5E94\u7528\u573A\u666F\uFF1A
 *          1\uFF09\u7A97\u53E3\u8C03\u6574\uFF08resize\uFF09
 *          2\uFF09\u9875\u9762\u6EDA\u52A8\uFF08scroll\uFF09
 *          3\uFF09DOM \u5143\u7D20\u7684\u62D6\u62FD
 *          4\uFF09\u591A\u6B21\u70B9\u51FBclick
 */</span>
<span class="token keyword">function</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> delay <span class="token operator">=</span> <span class="token number">200</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token keyword">return</span>
    flag <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
      flag <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B9E\u73B0\u4E00\u4E2A\u5BC4\u751F\u7EC4\u5408\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E00\u4E2A\u5BC4\u751F\u7EC4\u5408\u7EE7\u627F" aria-hidden="true">#</a> \u5B9E\u73B0\u4E00\u4E2A\u5BC4\u751F\u7EC4\u5408\u7EE7\u627F</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Parent&#39;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>play <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Parent</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;Child&#39;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Child</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
<span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Child
</code></pre></div><h2 id="\u624B\u5199promise" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199promise" aria-hidden="true">#</a> \u624B\u5199Promise</h2><p>Promise\u7684\u8FC7\u7A0B\uFF1A</p><ul><li>\u521D\u59CB\u5316Promise\u72B6\u6001\uFF0C\u4E3Apending</li><li>\u7ACB\u5373\u6267\u884CPromise\u4F20\u5165\u7684\u51FD\u6570\uFF0C\u5C06\u5185\u90E8\u7684resolve,reject\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012</li><li>\u6267\u884Cthen\u6CE8\u518C\u56DE\u8C03\u5904\u7406\u6570\u7EC4</li><li>Promise\u91CC\u7684\u5173\u952E\u662F\u8981\u4FDD\u8BC1\uFF0Cthen\u65B9\u6CD5\u4F20\u5165\u7684\u53C2\u6570onFullfilled\u548ConRejected\uFF0C\u5FC5\u987B\u5728then\u65B9\u6CD5\u88AB\u8C03\u7528\u7684\u90A3\u4E00\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u4E4B\u540E\u7684\u65B0\u6267\u884C\u6808\u4E2D\u6267\u884C</li><li>\u94FE\u5F0F\u8C03\u7528</li></ul><h3 id="\u57FA\u7840\u7248" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7248" aria-hidden="true">#</a> \u57FA\u7840\u7248</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyPromise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onFullfilledCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">let</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;fulfilled&#39;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
        <span class="token keyword">this</span><span class="token punctuation">.</span>onFullfilledCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token parameter">reason</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token string">&#39;rejected&#39;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">onFullfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>onFullfilledCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onFullfilled<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;fullfilled&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onFullfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u62F7\u8D1D" aria-hidden="true">#</a> \u62F7\u8D1D</h2><ol><li>\u57FA\u672C\u7C7B\u578B--\u540D\u503C\u5B58\u50A8\u5728\u6808\u5185\u5B58\u4E2D</li><li>\u5F15\u7528\u6570\u636E\u7C7B\u578B--\u540D\u5B58\u5728\u6808\u5185\u5B58\u4E2D\uFF0C\u503C\u5B58\u5728\u4E8E\u5806\u5185\u5B58\u4E2D\uFF0C\u4F46\u662F\u6808\u5185\u5B58\u4F1A\u63D0\u4F9B\u4E00\u4E2A\u5F15\u7528\u7684\u5730\u5740\u6307\u5411\u5806\u5185\u5B58\u4E2D\u7684\u503C</li><li>\u6D45\u62F7\u8D1D\u590D\u5236\u7684\u6570\u7EC4\u5BF9\u8C61\u5728\u6808\u5185\u5B58\u4E2D\u7684\u5F15\u7528\u5730\u5740</li></ol><h3 id="\u6570\u7EC4\u7684\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7684\u62F7\u8D1D" aria-hidden="true">#</a> \u6570\u7EC4\u7684\u62F7\u8D1D</h3><h4 id="\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h4><p>\u5982\u679C\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u90FD\u662F\u539F\u59CB\u7C7B\u578B\u7684\uFF0C\u90FD\u4F1A\u662F\u6DF1\u62F7\u8D1D\uFF0C\u6539\u53D8\u62F7\u8D1D\u540E\u7684\u6570\u7EC4\u7684\u503C\uFF0C\u539F\u59CB\u6570\u7EC4\u4E0D\u4F1A\u6539\u53D8</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> copy_arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token comment">// \u6570\u7EC4\u7ED3\u6784</span>
<span class="token punctuation">[</span><span class="token operator">...</span>copy_arr<span class="token punctuation">]</span> <span class="token operator">=</span> arr
<span class="token comment">// \u6570\u7EC4\u62FC\u63A5</span>
copy_arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6570\u636E\u622A\u53D6</span>
copy_arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// Array.from()</span>
copy_arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// Array.of()</span>
copy_arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// Object.assign</span>
copy_arr <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
<span class="token comment">// \u5FAA\u73AF</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  copy_arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u679C\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u662F\u5F15\u7528\u7C7B\u578B\u7684\uFF0C\u5219\u662F\u6D45\u62F7\u8D1D</p><h5 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h5><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> copy_arr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code>
</code></pre></div><h3 id="\u5BF9\u8C61\u7684\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u62F7\u8D1D" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u62F7\u8D1D</h3><h4 id="\u6D45\u62F7\u8D1D-1" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D-1" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h4><ol><li>Oject.assign</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5BF9\u8C61</span>
<span class="token keyword">const</span> <span class="token function-variable function">clone</span> <span class="token operator">=</span> <span class="token parameter">obj</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
</code></pre></div><ol start="2"><li>\u6269\u5C55\u8FD0\u7B97\u7B26...</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5BF9\u8C61</span>
<span class="token keyword">const</span> <span class="token function-variable function">clone</span> <span class="token operator">=</span> <span class="token parameter">obj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj<span class="token punctuation">}</span>
<span class="token comment">// \u6570\u7EC4</span>
</code></pre></div><h4 id="\u6DF1\u62F7\u8D1D-1" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D-1" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h4><ol><li>JSON.parse + JSON.stringify</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5BF9\u8C61\u6216\u6570\u7EC4</span>
<span class="token keyword">const</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token parameter">obj</span> <span class="token operator">=&gt;</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><ol><li>\u4F1A\u5FFD\u7565 <code>undefined</code></li><li>\u4F1A\u5FFD\u7565 <code>symbol</code></li><li>\u4E0D\u80FD\u5E8F\u5217\u5316\u51FD\u6570</li><li>\u4E0D\u80FD\u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61</li></ol></div><ol start="2"><li>for...in + \u9012\u5F52</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token parameter">obj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u5BF9\u8C61\u6765\u4FDD\u5B58\u62F7\u8D1D\u7684\u5BF9\u8C61</span>
    <span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u503C\u662F\u5BF9\u8C61\uFF0C\u5219\u9012\u5F52</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target
<span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li>Object.create</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token parameter">obj</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> copy <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> propNames <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

    propNames<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> desc <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>copy<span class="token punctuation">,</span> name<span class="token punctuation">,</span> desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> copy<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u6570\u7EC4\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6241\u5E73\u5316" aria-hidden="true">#</a> \u6570\u7EC4\u6241\u5E73\u5316</h2><h3 id="\u4E8C\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u4E8C\u7EF4\u6570\u7EC4</h3><ol><li>\u6570\u7EC4\u539F\u751F\u7684<code>flat()</code>\u65B9\u6CD5</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><ol start="2"><li>reduce() + concat()\uFF1A</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> prev<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u6D4B\u8BD5</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token function">flat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre></div><h3 id="\u591A\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u591A\u7EF4\u6570\u7EC4</h3><ol><li>\u9012\u5F52+forEach()+push()</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> flatArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">flat</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> flatArr<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      flatArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> flatArr
<span class="token punctuation">}</span>
</code></pre></div><ol start="2"><li>\u9012\u5F52+map()+concat()\uFF1A</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><ol start="3"><li>\u9012\u5F52+reduce()+concat():</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> prev<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">flat</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span> <span class="token operator">:</span> next<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="4"><li>toString()+split()+map()+Number()</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><ol start="5"><li>join()+split()+map()</li></ol><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u6D4B\u8BD5</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
<span class="token function">flat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD</h2><p>\u6570\u7EC4\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;true&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;true&#39;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">,</span><span class="token string">&#39;NaN&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, &quot;true&quot;, true, 15, false, undefined, null, NaN, &quot;NaN&quot;, 0, &quot;a&quot;, {}, {}]</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><p>{}\u65E0\u6CD5\u53BB\u91CD</p></div><h3 id="indexof" tabindex="-1"><a class="header-anchor" href="#indexof" aria-hidden="true">#</a> indexOf</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, &quot;true&quot;, true, 15, false, undefined, null, NaN, NaN, &quot;NaN&quot;, 0, &quot;a&quot;, {}, {}]</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><ol><li>NaN\u65E0\u6CD5\u53BB\u91CD</li><li>{}\u65E0\u6CD5\u53BB\u91CD</li></ol></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><p>{} \u65E0\u6CD5\u53BB\u91CD</p></div><h3 id="includes" tabindex="-1"><a class="header-anchor" href="#includes" aria-hidden="true">#</a> includes</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, &quot;true&quot;, true, 15, false, undefined, null, NaN, &quot;NaN&quot;, 0, &quot;a&quot;, {\u2026}, {\u2026}]</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><p>{}\u65E0\u6CD5\u53BB\u91CD</p></div><h3 id="reduce-includes" tabindex="-1"><a class="header-anchor" href="#reduce-includes" aria-hidden="true">#</a> reduce+includes</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> prev<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span> <span class="token operator">?</span> prev <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>prev<span class="token punctuation">,</span>next<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, &quot;true&quot;, true, 15, false, undefined, null, NaN, &quot;NaN&quot;, 0, &quot;a&quot;, {}, {}]</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><p>{}\u65E0\u6CD5\u53BB\u91CD</p></div><h3 id="\u4F5C\u4E3A\u5BF9\u8C61\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u4E3A\u5BF9\u8C61\u5904\u7406" aria-hidden="true">#</a> \u4F5C\u4E3A\u5BF9\u8C61\u5904\u7406</h3><p>\u5C06\u6570\u7EC4\u4E2D\u7684\u503C\u8BBE\u4E3A\u5BF9\u8C61\u5C5E\u6027\uFF0C\u9047\u5230\u91CD\u590D\u7684\u5219\u5220\u9664\u5F53\u524D\u91CD\u590D\u7684\uFF0C\u5E76\u5C06\u4E0B\u6807\u51CF\u4E00</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        obj<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><p>{}\u65E0\u6CD5\u53BB\u91CD</p></div><h3 id="\u6392\u5E8F\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u5BF9\u6BD4" aria-hidden="true">#</a> \u6392\u5E8F\u5BF9\u6BD4</h3><p>\u6392\u5E8F\u540E\u5BF9\u6BD4\u76F8\u90BB\u6570\uFF0C\u82E5\u76F8\u7B49\uFF0C\u5219\u5220\u9664\u5176\u4E2D\u4E00\u4E2A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token operator">-</span>b<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>res<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> res<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><ol><li>NaN\u65E0\u6CD5\u53BB\u91CD</li><li>{}\u65E0\u6CD5\u53BB\u91CD</li></ol></div><h3 id="\u53CC\u5C42for\u5FAA\u73AF-splice" tabindex="-1"><a class="header-anchor" href="#\u53CC\u5C42for\u5FAA\u73AF-splice" aria-hidden="true">#</a> \u53CC\u5C42for\u5FAA\u73AF+splice</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u7B2C\u4E00\u4E2A\u7B49\u540C\u4E8E\u7B2C\u4E8C\u4E2A\uFF0Csplice\u65B9\u6CD5\u5220\u9664\u7B2C\u4E8C\u4E2A</span>
            arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            j<span class="token operator">--</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, &quot;true&quot;, 15, false, undefined, NaN, NaN, &quot;NaN&quot;, &quot;a&quot;, {}, {}]</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><ol><li>null\u4F1A\u90FD\u53BB\u6389</li><li>NaN\u65E0\u6CD5\u53BB\u91CD</li><li>0\u90FD\u4F1A\u53BB\u6389</li><li>{}\u65E0\u6CD5\u53BB\u91CD</li></ol></div><h3 id="hasownproperty" tabindex="-1"><a class="header-anchor" href="#hasownproperty" aria-hidden="true">#</a> hasOwnProperty</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> item <span class="token operator">+</span> item<span class="token punctuation">)</span>
        <span class="token operator">?</span> <span class="token boolean">false</span>
        <span class="token operator">:</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token keyword">typeof</span> item <span class="token operator">+</span> item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, &quot;true&quot;, true, 15, false, undefined, null, NaN, &quot;NaN&quot;, 0, &quot;a&quot;, {}]</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">\u6210\u529F</p><p>\u5168\u90E8\u53BB\u91CD</p></div><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5F53\u524D\u5143\u7D20\uFF0C\u5728\u539F\u59CB\u6570\u7EC4\u4E2D\u7684\u7B2C\u4E00\u4E2A\u7D22\u5F15==\u5F53\u524D\u7D22\u5F15\u503C\uFF0C\u5426\u5219\u8FD4\u56DE\u5F53\u524D\u5143\u7D20</span>
      <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">===</span> index<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, &quot;true&quot;, true, 15, false, undefined, null, &quot;NaN&quot;, 0, &quot;a&quot;, {}, {}]</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">\u95EE\u9898</p><ol><li>NaN\u4F1A\u5168\u90E8\u5220\u9664\u6389</li><li>{}\u65E0\u6CD5\u53BB\u91CD</li></ol></div>`,101);function f(m,h){const s=t("ExternalLinkIcon");return o(),e("div",null,[k,n("p",null,[n("a",i,[r,c(s)])]),d])}var y=p(l,[["render",f],["__file","coding.html.vue"]]);export{y as default};
