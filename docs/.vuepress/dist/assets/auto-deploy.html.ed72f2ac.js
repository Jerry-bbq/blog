import{_ as o,r as c,o as e,c as u,a as n,b as t,e as p,d as s}from"./app.515d390f.js";const l={},i=p('<h1 id="\u81EA\u52A8\u90E8\u7F72" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u90E8\u7F72" aria-hidden="true">#</a> \u81EA\u52A8\u90E8\u7F72</h1><h2 id="\u4E1A\u52A1\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4E1A\u52A1\u573A\u666F" aria-hidden="true">#</a> \u4E1A\u52A1\u573A\u666F</h2><ul><li>\u5728\u516C\u53F8\u6CA1\u6709Jenkins\u7B49\u90E8\u7F72\u5DE5\u5177\u7684\u65F6\u5019</li><li>\u9700\u8981\u6211\u4EEC\u81EA\u5DF1\u6BCF\u6B21\u624B\u52A8\u53BB\u90E8\u7F72\uFF0C\u6253\u5305\uFF0C\u538B\u7F29\uFF0C\u4E0A\u4F20\uFF0C\u89E3\u538B\u7B49\u5DE5\u4F5C\u5F88\u7E41\u7410</li><li>\u56E0\u6B64\u9700\u8981\u4E00\u4E2A\u81EA\u52A8\u53D1\u5E03\u7684\u6765\u5E2E\u52A9\u6211\u4EEC\u89E3\u51B3\u8FD9\u4E9B\u7E41\u7410\u7684\u5DE5\u4F5C</li></ul><h2 id="\u51C6\u5907\u5DE5\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u51C6\u5907\u5DE5\u4F5C" aria-hidden="true">#</a> \u51C6\u5907\u5DE5\u4F5C</h2>',4),k=s("\u67E5\u9605\u8D44\u6599\uFF0C\u53C2\u8003\uFF1A"),r={href:"https://www.jianshu.com/p/d78e4898824f",target:"_blank",rel:"noopener noreferrer"},d=s("ssh2\u5B9E\u73B0vue\u9879\u76EE\u81EA\u52A8\u5316\u6253\u5305\u53D1\u5E03"),m=s("\u8FD9\u7BC7\u6587\u7AE0"),g=n("ol",null,[n("li",null,"linux\u670D\u52A1\u5668\u89E3\u538B\u6587\u4EF6\u5230\u6307\u5B9A\u7684\u6587\u4EF6\u5939\uFF1A")],-1),h=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"unzip"),s(` update.zip -d update
`)])])],-1),f=n("ol",{start:"2"},[n("li",null,"\u76F8\u5173\u63D2\u4EF6")],-1),y={href:"https://github.com/mscdex/ssh2",target:"_blank",rel:"noopener noreferrer"},_=s("ssh2"),q=s("\uFF1A\u8FDE\u63A5\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u7AEF\u7684\u5DE5\u5177"),w={href:"https://github.com/archiverjs/node-archiver",target:"_blank",rel:"noopener noreferrer"},v=s("archier"),b=s("\uFF1A\u7528\u4E8E\u751F\u6210\u6587\u6863\u7684\u6D41\u63A5\u53E3"),x={href:"https://github.com/chalk/chalk",target:"_blank",rel:"noopener noreferrer"},j=s("chalk"),N=s("\uFF1Anode\u7EC8\u7AEF\u6837\u5F0F\u5E93"),P=p(`<h2 id="\u6280\u672F\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6280\u672F\u5B9E\u73B0" aria-hidden="true">#</a> \u6280\u672F\u5B9E\u73B0</h2><p>package.json</p><div class="language-bash ext-sh"><pre class="language-bash"><code>scripts: <span class="token punctuation">{</span>
  deploy: <span class="token string">&quot;node deploy/deploy.js&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53C2\u6570\u914D\u7F6E\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// config.js</span>
<span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u670D\u52A1\u5668ip</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u7528\u6237\u540D</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;***&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u5BC6\u7801</span>
  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token comment">// \u7AEF\u53E3\u53F7\uFF08\u9ED8\u8BA422\uFF09</span>
  <span class="token literal-property property">remotePath</span><span class="token operator">:</span> <span class="token string">&quot;/web&quot;</span> <span class="token comment">// \u670D\u52A1\u5B58\u653E\u524D\u7AEF\u8D44\u6E90\u7684\u76EE\u5F55</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> config<span class="token punctuation">;</span>
</code></pre></div><p>\u90E8\u7F72\u5DE5\u4F5C\uFF1A</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// deploy.js</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> archiver <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;archiver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;chalk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Client <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;ssh2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Client<span class="token punctuation">;</span>
<span class="token keyword">const</span> conn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./config&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> host<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> port<span class="token punctuation">,</span> remotePath <span class="token punctuation">}</span> <span class="token operator">=</span> config<span class="token punctuation">;</span>

<span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u672C\u5730\u6587\u4EE5\u53CA\u670D\u52A1\u670D\u52A1\u5668\u6587\u4EF6,\u53EF\u6839\u636E\u73AF\u5883\u53D8\u91CF\u8FDB\u884C\u914D\u7F6E</span>
<span class="token keyword">const</span> localFilePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.zip</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// \u672C\u5730\u538B\u7F29\u540E\u7684\u6587\u4EF6</span>

<span class="token comment">// \u538B\u7F29\u6587\u4EF6</span>
<span class="token keyword">function</span> <span class="token function">compress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> output <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>localFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u53EF\u5199\u6D41 **.zip</span>
  <span class="token keyword">const</span> archive <span class="token operator">=</span> <span class="token function">archiver</span><span class="token punctuation">(</span><span class="token string">&quot;zip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u751F\u6210archiver\u5BF9\u8C61\uFF0C\u6253\u5305\u7C7B\u578B\u4E3Azip</span>
  archive<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u5B58\u6863\u6570\u636E\u7BA1\u9053\u5316\u5230\u6587\u4EF6</span>
  archive<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FFD\u52A0\u4E0E\u5339\u914D\u5230\u7684\u6587\u4EF6</span>
  archive<span class="token punctuation">.</span><span class="token function">finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B8C\u6210\u6253\u5305,\u201Cclose\u201D\u3001\u201Cend\u201D\u6216\u201Cfinish\u201D\u53EF\u80FD\u5728\u8C03\u7528\u6B64\u65B9\u6CD5\u540E\u7ACB\u5373\u88AB\u6FC0\u53D1</span>
  output<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token string">&quot;compress finished, waiting for upload...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0A\u4F20</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> cmdList <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">cd </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>remotePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rm -rf </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.copy\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">mv </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.copy\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">unzip </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.zip\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rm -rf </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.zip\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">exit\\n</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u4E0A\u4F20\u6587\u4EF6
 * <span class="token keyword">@param</span> <span class="token parameter">conn</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token parameter">conn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> remoteFilePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>remotePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.zip</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token comment">// \u8FDC\u7A0B\u6587\u4EF6\u8DEF\u5F84</span>
  conn<span class="token punctuation">.</span><span class="token function">sftp</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> sftp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    sftp<span class="token punctuation">.</span><span class="token function">fastPut</span><span class="token punctuation">(</span>localFilePath<span class="token punctuation">,</span> remoteFilePath<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">shell</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u4E0A\u4F20\u5B8C\u6210\u540E\u670D\u52A1\u5668\u9700\u8981\u6267\u884C\u7684\u5185\u5BB9
 * \u5220\u9664\u672C\u5730\u538B\u7F29\u6587\u4EF6
 * <span class="token keyword">@param</span> <span class="token parameter">conn</span>
 * <span class="token keyword">@constructor</span>
 */</span>
<span class="token keyword">function</span> <span class="token function">shell</span><span class="token punctuation">(</span><span class="token parameter">conn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  conn<span class="token punctuation">.</span><span class="token function">shell</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    stream
      <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Stream :: close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        conn<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>localFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;OUTPUT: &quot;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    stream<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>cmdList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  conn
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;ready&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Client :: ready&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">uploadFile</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span> host<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> port <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">compress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u66B4\u9732\u4E86\u670D\u52A1\u5668\u7684\u5BC6\u7801\uFF0C\u6709\u5B89\u5168\u9690\u60A3</li><li>\u9700\u8981\u5148\u672C\u5730\u6253\u5305\uFF0C\u7136\u540E\u5728\u6267\u884C<code>npm run deploy</code>\uFF0C\u90E8\u7F72\u5B8C\u6210\u4E4B\u540E\u9700\u8981\u624B\u52A8\u5220\u9664\u672C\u5730\u7684\u5305</li></ul>`,9);function z($,F){const a=c("ExternalLinkIcon");return e(),u("div",null,[i,n("p",null,[k,n("a",r,[d,t(a)]),m]),g,h,f,n("ul",null,[n("li",null,[n("a",y,[_,t(a)]),q]),n("li",null,[n("a",w,[v,t(a)]),b]),n("li",null,[n("a",x,[j,t(a)]),N])]),P])}var L=o(l,[["render",z],["__file","auto-deploy.html.vue"]]);export{L as default};
