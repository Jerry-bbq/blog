(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{431:function(s,t,a){s.exports=a.p+"assets/img/graph.b12d0b2e.png"},535:function(s,t,a){"use strict";a.r(t);var n=a(36),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[s._v("#")]),s._v(" 图")]),s._v(" "),n("p",[s._v("图是一种非线性数据结构。图是一组由边连接的节点（或顶点）。学习图是重要的，因为任何二元关系都可以用图来表示。")]),s._v(" "),n("p",[s._v("一个图 G = (V, E)由以下元素组成。")]),s._v(" "),n("ul",[n("li",[s._v("V：一组顶点")]),s._v(" "),n("li",[s._v("E：一组边，连接 V 中的顶点")])]),s._v(" "),n("p",[s._v("下图表示一个图。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(431),alt:"graph"}})]),s._v(" "),n("p",[s._v("由一条边连接在一起的顶点称为"),n("strong",[s._v("相邻顶点")]),s._v("。比如， A 和 B 是相邻的， A 和 D 是相邻的， A 和C 是相邻的， A 和 E 不是相邻的。")]),s._v(" "),n("p",[s._v("一个顶点的度是其相邻顶点的数量。比如， A 和其他三个顶点相连接，因此 A 的度为 3； E和其他两个顶点相连，因此 E 的度为 2。")]),s._v(" "),n("p",[s._v("路径是顶点 v1, v2, …, vk的一个连续序列，其中 vi和 vi+1是相邻的。以上一示意图中的图为例，其中包含路径 A B E I 和 A C D G")]),s._v(" "),n("h2",{attrs:{id:"创建图类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建图类"}},[s._v("#")]),s._v(" 创建图类")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Graph")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("isDirected "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isDirected "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" isDirected "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 是否有向")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("vertices "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 存储图中所有顶点的名字")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("adjList "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Dictionary")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 存储邻接表")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);