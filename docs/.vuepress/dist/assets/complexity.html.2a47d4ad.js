import{_ as a,r as p,o as t,c as o,b as n,d as e,a as c,e as l}from"./app.d64d29bc.js";const u={},k=c(`<h1 id="\u65F6\u95F4\u590D\u6742\u5EA6\u548C\u7A7A\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u590D\u6742\u5EA6\u548C\u7A7A\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u65F6\u95F4\u590D\u6742\u5EA6\u548C\u7A7A\u95F4\u590D\u6742\u5EA6</h1><h2 id="\u590D\u6742\u5EA6\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5EA6\u5206\u6790" aria-hidden="true">#</a> \u590D\u6742\u5EA6\u5206\u6790</h2><p>\u590D\u6742\u5EA6\u5206\u6790\u662F\u6574\u4E2A\u7B97\u6CD5\u5B66\u4E60\u7684\u7CBE\u9AD3\uFF0C\u53EA\u8981\u638C\u63E1\u4E86\u5B83\uFF0C\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u7684\u5185\u5BB9\u57FA\u672C\u4E0A\u5C31\u638C\u63E1\u4E86\u4E00\u534A\u4E86\u3002</p><ul><li><p>\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u89E3\u51B3\u662F \u201C\u5982\u4F55\u8BA9\u8BA1\u7B97\u673A\u66F4\u5FEB\u65F6\u95F4\u3001\u66F4\u7701\u7A7A\u95F4\u7684\u89E3\u51B3\u95EE\u9898\u201D\u3002</p></li><li><p>\u56E0\u6B64\u9700\u4ECE\u6267\u884C\u65F6\u95F4\u548C\u5360\u7528\u7A7A\u95F4\u4E24\u4E2A\u7EF4\u5EA6\u6765\u8BC4\u4F30\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u7684\u6027\u80FD\u3002</p></li><li><p>\u5206\u522B\u7528\u65F6\u95F4\u590D\u6742\u5EA6\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E24\u4E2A\u6982\u5FF5\u6765\u63CF\u8FF0\u6027\u80FD\u95EE\u9898\uFF0C\u4E8C\u8005\u7EDF\u79F0\u4E3A\u590D\u6742\u5EA6\u3002</p></li><li><p>\u590D\u6742\u5EA6\u63CF\u8FF0\u7684\u662F\u7B97\u6CD5\u6267\u884C\u65F6\u95F4\uFF08\u6216\u5360\u7528\u7A7A\u95F4\uFF09\u4E0E\u6570\u636E\u89C4\u6A21\u7684\u589E\u957F\u5173\u7CFB\u3002</p></li><li><p>\u548C\u6027\u80FD\u6D4B\u8BD5\u76F8\u6BD4\uFF0C\u590D\u6742\u5EA6\u5206\u6790\u6709\u4E0D\u4F9D\u8D56\u6267\u884C\u73AF\u5883\u3001\u6210\u672C\u4F4E\u3001\u6548\u7387\u9AD8\u3001\u6613\u64CD\u4F5C\u3001\u6307\u5BFC\u6027\u5F3A\u7684\u7279\u70B9\u3002</p></li><li><p>\u638C\u63E1\u590D\u6742\u5EA6\u5206\u6790\uFF0C\u5C06\u80FD\u7F16\u5199\u51FA\u6027\u80FD\u66F4\u4F18\u7684\u4EE3\u7801\uFF0C\u6709\u5229\u4E8E\u964D\u4F4E\u7CFB\u7EDF\u5F00\u53D1\u548C\u7EF4\u62A4\u6210\u672C\u3002</p></li></ul><h2 id="\u5927o\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5927o\u8868\u793A\u6CD5" aria-hidden="true">#</a> \u5927O\u8868\u793A\u6CD5</h2><div class="language-bash ext-sh"><pre class="language-bash"><code>T<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">=</span> O<span class="token punctuation">(</span>f<span class="token punctuation">(</span>n<span class="token punctuation">))</span>
</code></pre></div><p>\u6240\u6709\u4EE3\u7801\u7684\u6267\u884C\u65F6\u95F4 <code>T(n)</code> \u4E0E\u6BCF\u884C\u4EE3\u7801\u7684\u6267\u884C\u6B21\u6570 <code>n</code> \u6210\u6B63\u6BD4\u3002</p><ul><li>T(n)\uFF1A\u4EE3\u7801\u6267\u884C\u7684\u65F6\u95F4</li><li>n\uFF1A\u6570\u636E\u89C4\u6A21</li><li>f(n)\uFF1A\u6BCF\u884C\u4EE3\u7801\u6267\u884C\u7684\u6B21\u6570\u603B\u548C</li><li>O\uFF1A\u8868\u793A T(n) \u4E0E f(n) \u6210\u6B63\u6BD4</li></ul><h2 id="\u65F6\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u65F6\u95F4\u590D\u6742\u5EA6</h2><p><code>\u5927 O \u65F6\u95F4\u590D\u6742\u5EA6\u8868\u793A\u6CD5</code> \u5B9E\u9645\u4E0A\u5E76\u4E0D\u5177\u4F53\u8868\u793A\u4EE3\u7801\u771F\u6B63\u7684\u6267\u884C\u65F6\u95F4\uFF0C\u800C\u662F\u8868\u793A <code>\u4EE3\u7801\u6267\u884C\u65F6\u95F4\u968F\u6570\u636E\u89C4\u6A21\u589E\u957F\u7684\u53D8\u5316\u8D8B\u52BF</code>\uFF0C\u6240\u4EE5\u4E5F\u53EB <code>\u6E10\u8FDB\u65F6\u95F4\u590D\u6742\u5EA6</code>\uFF0C\u7B80\u79F0 <code>\u65F6\u95F4\u590D\u6742\u5EA6</code>\uFF08asymptotic time complexity\uFF09\u3002</p><h3 id="\u5982\u4F55\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5206\u6790" aria-hidden="true">#</a> \u5982\u4F55\u5206\u6790</h3><ul><li>\u53EA\u5173\u6CE8\u5FAA\u73AF\u6267\u884C\u6B21\u6570\u6700\u591A\u7684\u4E00\u6BB5\u4EE3\u7801</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5355\u6BB5\u4EE3\u7801\u770B\u9AD8\u9891\uFF1A\u6BD4\u5982\u5FAA\u73AF\u3002</span>
<span class="token keyword">function</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
   <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6267\u884C\u6B21\u6570\u6700\u591A\u7684\u662F for \u5FAA\u73AF\u53CA\u91CC\u9762\u7684\u4EE3\u7801\uFF0C\u6267\u884C\u4E86 n \u6B21\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n)\u3002</span>
</code></pre></div><ul><li>\u52A0\u6CD5\u6CD5\u5219\uFF1A\u603B\u590D\u6742\u5EA6\u7B49\u4E8E\u91CF\u7EA7\u6700\u5927\u7684\u90A3\u6BB5\u4EE3\u7801\u7684\u590D\u6742\u5EA6</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u591A\u6BB5\u4EE3\u7801\u53D6\u6700\u5927\uFF1A\u6BD4\u5982\u4E00\u6BB5\u4EE3\u7801\u4E2D\u6709\u5355\u5FAA\u73AF\u548C\u591A\u91CD\u5FAA\u73AF\uFF0C\u90A3\u4E48\u53D6\u591A\u91CD\u5FAA\u73AF\u7684\u590D\u6742\u5EA6\u3002</span>
<span class="token keyword">function</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> sum_1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token operator">++</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     sum_1 <span class="token operator">=</span> sum_1 <span class="token operator">+</span> p<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">let</span> sum_2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> q <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> q <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>q<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     sum_2 <span class="token operator">=</span> sum_2 <span class="token operator">+</span> q<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 
   <span class="token keyword">let</span> sum_3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       sum_3 <span class="token operator">=</span> sum_3 <span class="token operator">+</span>  i <span class="token operator">*</span> j<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
 
   <span class="token keyword">return</span> sum_1 <span class="token operator">+</span> sum_2 <span class="token operator">+</span> sum_3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B2C\u4E00\u90E8\u5206\uFF0C\u6C42 sum_1 \uFF0C\u660E\u786E\u77E5\u9053\u6267\u884C\u4E86 100 \u6B21\uFF0C\u800C\u548C n \u7684\u89C4\u6A21\u65E0\u5173\uFF0C\u662F\u4E2A\u5E38\u91CF\u7684\u6267\u884C\u65F6\u95F4\uFF0C\u4E0D\u80FD\u53CD\u6620\u589E\u957F\u53D8\u5316\u8D8B\u52BF\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002</span>

<span class="token comment">// \u7B2C\u4E8C\u548C\u7B2C\u4E09\u90E8\u5206\uFF0C\u6C42 sum_2 \u548C sum_3 \uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u662F\u548C n \u7684\u89C4\u6A21\u6709\u5173\u7684\uFF0C\u4E3A\u522B\u4E3A O(n) \u548C O(n\xB2)\u3002</span>

<span class="token comment">// \u6240\u4EE5\uFF0C\u53D6\u4E09\u6BB5\u4EE3\u7801\u7684\u6700\u5927\u91CF\u7EA7\uFF0C\u4E0A\u9762\u4F8B\u5B50\u7684\u6700\u7EC8\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n\u5E73\u65B9)\u3002</span>

<span class="token comment">// \u540C\u7406\u7C7B\u63A8\uFF0C\u5982\u679C\u6709 3 \u5C42 for \u5FAA\u73AF\uFF0C\u90A3\u4E48\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n\xB3)\uFF0C4 \u5C42\u5C31\u662F O(n^4)\u3002</span>

<span class="token comment">// \u6240\u4EE5\uFF0C\u603B\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u7B49\u4E8E\u91CF\u7EA7\u6700\u5927\u7684\u90A3\u6BB5\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u3002</span>

</code></pre></div><ul><li>\u4E58\u6CD5\u6CD5\u5219\uFF1A\u5D4C\u5957\u4EE3\u7801\u7684\u590D\u6742\u5EA6\u7B49\u4E8E\u5D4C\u5957\u5185\u5916\u4EE3\u7801\u590D\u6742\u5EA6\u7684\u4E58\u79EF</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u5D4C\u5957\u4EE3\u7801\u6C42\u4E58\u79EF\uFF1A\u6BD4\u5982\u9012\u5F52\u3001\u591A\u91CD\u5FAA\u73AF\u7B49\u3002</span>
<span class="token keyword">function</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 
   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     ret <span class="token operator">=</span> ret <span class="token operator">+</span> <span class="token function">f</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u91CD\u70B9\u4E3A  f(i)</span>
   <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 
 
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 
  <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65B9\u6CD5 cal \u5FAA\u73AF\u91CC\u9762\u8C03\u7528 f \u65B9\u6CD5\uFF0C\u800C f \u65B9\u6CD5\u91CC\u9762\u4E5F\u6709\u5FAA\u73AF\u3002</span>

<span class="token comment">// \u6240\u4EE5\uFF0C\u6574\u4E2A cal() \u51FD\u6570\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F\uFF0CT(n) = T1(n) * T2(n) = O(n*n) = O(n\xB2) \u3002</span>

</code></pre></div><ul><li>\u591A\u4E2A\u89C4\u6A21\u6C42\u52A0\u6CD5\uFF1A\u6BD4\u5982\u65B9\u6CD5\u6709\u4E24\u4E2A\u53C2\u6570\u63A7\u5236\u4E24\u4E2A\u5FAA\u73AF\u7684\u6B21\u6570\uFF0C\u90A3\u4E48\u8FD9\u65F6\u5C31\u53D6\u4E8C\u8005\u590D\u6742\u5EA6\u76F8\u52A0</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum_1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum_1 <span class="token operator">=</span> sum_1 <span class="token operator">+</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> sum_2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum_2 <span class="token operator">=</span> sum_2 <span class="token operator">+</span> j<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> sum_1 <span class="token operator">+</span> sum_2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4EE5\u4E0A\u4EE3\u7801\u4E5F\u662F\u6C42\u548C \uFF0C\u6C42 sum_1 \u7684\u6570\u636E\u89C4\u6A21\u4E3A m\u3001\u6C42 sum_2 \u7684\u6570\u636E\u89C4\u6A21\u4E3A n\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(m+n)\u3002</span>

<span class="token comment">// \u516C\u5F0F\uFF1AT1(m) + T2(n) = O(f(m) + g(n)) </span>
</code></pre></div><ul><li>\u591A\u4E2A\u89C4\u6A21\u6C42\u4E58\u6CD5\uFF1A\u6BD4\u5982\u65B9\u6CD5\u6709\u4E24\u4E2A\u53C2\u6570\u63A7\u5236\u4E24\u4E2A\u5FAA\u73AF\u7684\u6B21\u6570\uFF0C\u90A3\u4E48\u8FD9\u65F6\u5C31\u53D6\u4E8C\u8005\u590D\u6742\u5EA6\u76F8\u4E58</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum_3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       sum_3 <span class="token operator">=</span> sum_3 <span class="token operator">+</span>  i <span class="token operator">*</span> j<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4EE5\u4E0A\u4EE3\u7801\u4E5F\u662F\u6C42\u548C\uFF0C\u4E24\u5C42 for \u5FAA\u73AF \uFF0C\u6C42 sum_3 \u7684\u6570\u636E\u89C4\u6A21\u4E3A m \u548C n\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(m*n)</span>

<span class="token comment">// \u516C\u5F0F\uFF1AT1(m) * T2(n) = O(f(m) * g(n))</span>
</code></pre></div><ul><li>\u591A\u9879\u5F0F\u9636\uFF1A\u968F\u7740\u6570\u636E\u89C4\u6A21\u7684\u589E\u957F\uFF0C\u7B97\u6CD5\u7684\u6267\u884C\u65F6\u95F4\u548C\u7A7A\u95F4\u5360\u7528\uFF0C\u6309\u7167\u591A\u9879\u5F0F\u7684\u6BD4\u4F8B\u589E\u957F</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span>  <span class="token punctuation">{</span>
   i <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4EE3\u7801\u662F\u4ECE 1 \u5F00\u59CB\uFF0C\u6BCF\u6B21\u5FAA\u73AF\u5C31\u4E58\u4EE5 2\uFF0C\u5F53\u5927\u4E8E n \u65F6\uFF0C\u5FAA\u73AF\u7ED3\u675F\u3002</span>
<span class="token comment">// \u5728\u5BF9\u6570\u9636\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u8868\u793A\u65B9\u6CD5\u91CC\uFF0C\u6211\u4EEC\u5FFD\u7565\u5BF9\u6570\u7684 \u201C\u5E95\u201D\uFF0C\u7EDF\u4E00\u8868\u793A\u4E3A O(logn)\u3002</span>
</code></pre></div><h3 id="\u5E38\u91CF\u9636-o-1" tabindex="-1"><a class="header-anchor" href="#\u5E38\u91CF\u9636-o-1" aria-hidden="true">#</a> \u5E38\u91CF\u9636 O(1)</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">aFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//  \u9700\u8981\u6267\u884C 1 \u6B21</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>                          <span class="token comment">//  \u9700\u8981\u6267\u884C 1 \u6B21</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u4E2A\u65B9\u6CD5\u9700\u8981\u6267\u884C 2 \u6B21\u8FD0\u7B97\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A T(n) = O(1)</p><h3 id="\u7EBF\u6027\u9636-o-n" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u9636-o-n" aria-hidden="true">#</a> \u7EBF\u6027\u9636 O(n)</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bFun</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token comment">// \u9700\u8981\u6267\u884C (n + 1) \u6B21</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// \u9700\u8981\u6267\u884C n \u6B21</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>                              <span class="token comment">// \u9700\u8981\u6267\u884C 1 \u6B21</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u4E2A\u65B9\u6CD5\u9700\u8981\u6267\u884C ( n + 1 + n + 1 ) = 2n +2 \u6B21\u8FD0\u7B97\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A T(n) = O(n)</p><h3 id="\u5E73\u65B9\u9636-o-n2" tabindex="-1"><a class="header-anchor" href="#\u5E73\u65B9\u9636-o-n2" aria-hidden="true">#</a> \u5E73\u65B9\u9636 O(n\xB2)</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                   <span class="token comment">// 1 \u6B21</span>
   <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                     <span class="token comment">// 1 \u6B21</span>
   <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                     <span class="token comment">// 1 \u6B21</span>
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment">// n \u6B21</span>
     j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                       <span class="token comment">// n \u6B21</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// n * n \uFF0C\u4E5F\u5373\u662F  n\u5E73\u65B9\u6B21</span>
       sum <span class="token operator">=</span> sum <span class="token operator">+</span>  i <span class="token operator">*</span> j<span class="token punctuation">;</span>        <span class="token comment">// n * n \uFF0C\u4E5F\u5373\u662F  n\u5E73\u65B9\u6B21</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u4E2A\u65B9\u6CD5\u9700\u8981\u6267\u884C ( n2 + n2 + n + n + 1 + 1 +1 ) = 2n\xB2 +2n + 3 \u6B21\u8FD0\u7B97\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A T(n) = O(n\xB2)</p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u7531\u4E8E \u65F6\u95F4\u590D\u6742\u5EA6 \u63CF\u8FF0\u7684\u662F\u7B97\u6CD5\u6267\u884C\u65F6\u95F4\u4E0E\u6570\u636E\u89C4\u6A21\u7684 <code>\u589E\u957F\u53D8\u5316\u8D8B\u52BF</code>\uFF0C\u6240\u4EE5 <code>\u5E38\u91CF</code>\u3001<code>\u4F4E\u9636</code>\u3001<code>\u7CFB\u6570</code> \u5B9E\u9645\u4E0A\u5BF9\u8FD9\u79CD\u589E\u957F\u8D8B\u52BF\u4E0D\u4EA7\u751F\u51B3\u5B9A\u6027\u5F71\u54CD\uFF0C\u6240\u4EE5\u5728\u505A\u65F6\u95F4\u590D\u6742\u5EA6\u5206\u6790\u65F6 <code>\u5FFD\u7565</code> \u8FD9\u4E9B\u9879\u3002</p></div><h3 id="\u7ACB\u65B9\u9636-o-n3" tabindex="-1"><a class="header-anchor" href="#\u7ACB\u65B9\u9636-o-n3" aria-hidden="true">#</a> \u7ACB\u65B9\u9636 O(n\xB3)</h3><p>O(n\xB3) \u5C31\u662F\u5728 O(n\xB2) \u7684\u57FA\u7840\u4E0A\u518D\u5D4C\u5957\u4E00\u5C42\u5FAA\u73AF</p><h3 id="\u5BF9\u6570\u9636-o-logn" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u6570\u9636-o-logn" aria-hidden="true">#</a> \u5BF9\u6570\u9636 O(logn)</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  i <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u89C2\u5BDF\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u5F53\u5FAA\u73AF x \u6B21\u540E\uFF0C\u5FAA\u73AF\u9000\u51FA\u3002\u4E5F\u5C31\u662F\u8BF4 2 \u7684 x \u6B21\u65B9\u7B49\u4E8E n\u3002\u90A3\u4E48 x = log2^n\uFF0C\u4E5F\u5C31\u662F\u5FAA\u73AF log2^n \u6B21\u540E\u5FAA\u73AF\u9000\u51FA\uFF0C\u5F97\u51FA\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logn)\u3002<code>\u4E8C\u5206\u67E5\u627E\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F O(logn)</code>\u3002</p><h3 id="\u7EBF\u6027\u5BF9\u6570\u9636-o-nlogn" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u5BF9\u6570\u9636-o-nlogn" aria-hidden="true">#</a> \u7EBF\u6027\u5BF9\u6570\u9636 O(nlogn)</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        j <span class="token operator">=</span> j <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7406\u89E3\u4E86\u5BF9\u6570\u9636\u548C\u7EBF\u6027\u9636\uFF0C\u7EBF\u6027\u5BF9\u6570\u9636\u7406\u89E3\u8D77\u6765\u5C31\u5F88\u5BB9\u6613\u4E86\uFF0C\u5C31\u662F\u5C06\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logn) \u7684\u4EE3\u7801\u5FAA\u73AF n \u904D\uFF0C\u90A3\u4E48\u5B83\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F O (nlogn)\u3002<code>\u5F52\u5E76\u6392\u5E8F\u3001\u5FEB\u901F\u6392\u5E8F\u3001\u5806\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662F O(nlogn)</code>\u3002</p><h3 id="\u6307\u6570\u9636-o-2-n" tabindex="-1"><a class="header-anchor" href="#\u6307\u6570\u9636-o-2-n" aria-hidden="true">#</a> \u6307\u6570\u9636 O(2^n)</h3><h3 id="\u9636\u4E58\u9636-o-n" tabindex="-1"><a class="header-anchor" href="#\u9636\u4E58\u9636-o-n" aria-hidden="true">#</a> \u9636\u4E58\u9636 O(n!)</h3><h2 id="\u7A7A\u95F4\u590D\u6742\u5EA6\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u95F4\u590D\u6742\u5EA6\u5EA6" aria-hidden="true">#</a> \u7A7A\u95F4\u590D\u6742\u5EA6\u5EA6</h2><p>\u7A7A\u95F4\u590D\u6742\u5EA6\u5168\u79F0\u5C31\u662F <code>\u6E10\u8FDB\u7A7A\u95F4\u590D\u6742\u5EA6</code>\uFF08asymptotic space complexity\uFF09\uFF0C\u8868\u793A <code>\u7B97\u6CD5\u7684\u5B58\u50A8\u7A7A\u95F4\u4E0E\u6570\u636E\u89C4\u6A21\u4E4B\u95F4\u7684\u589E\u957F\u5173\u7CFB</code></p><p>\u7B97\u6CD5\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u901A\u8FC7\u8BA1\u7B97\u7B97\u6CD5\u6240\u9700\u7684\u5B58\u50A8\u7A7A\u95F4\u5B9E\u73B0\uFF0C\u7B97\u6CD5\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u7684\u8BA1\u7B97\u516C\u5F0F\u8BB0\u4F5C\uFF1A<code>S(n) = O(f(n))</code>\uFF0C\u5176\u4E2D\uFF0Cn \u4E3A\u95EE\u9898\u7684\u89C4\u6A21\uFF0Cf(n) \u4E3A\u8BED\u53E5\u5173\u4E8E n \u6240\u5360\u5B58\u50A8\u7A7A\u95F4\u7684\u51FD\u6570\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">const</span> newArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u7B2C 2 \u884C</span>
 newArr<span class="token punctuation">.</span>length <span class="token operator">=</span> n<span class="token punctuation">;</span> <span class="token comment">// \u7B2C 3 \u884C</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span>n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">*</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8DDF\u65F6\u95F4\u590D\u6742\u5EA6\u5206\u6790\u4E00\u6837\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u7B2C 2 \u884C\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u7533\u8BF7\u4E86\u4E00\u4E2A\u7A7A\u95F4\u5B58\u50A8\u53D8\u91CF newArr \uFF0C\u662F\u4E2A\u7A7A\u6570\u7EC4\u3002\u7B2C 3 \u884C\u628A newArr \u7684\u957F\u5EA6\u4FEE\u6539\u4E3A n \u7684\u957F\u5EA6\u7684\u6570\u7EC4\uFF0C\u6BCF\u9879\u7684\u503C\u4E3A undefined \uFF0C\u9664\u6B64\u4E4B\u5916\uFF0C\u5269\u4E0B\u7684\u4EE3\u7801\u90FD\u6CA1\u6709\u5360\u7528\u66F4\u591A\u7684\u7A7A\u95F4\uFF0C\u6240\u4EE5\u6574\u6BB5\u4EE3\u7801\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u5C31\u662F O(n)\u3002</p><p>\u5E38\u89C1\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u5C31\u662F O(1)\u3001O(n)\u3001O(n\xB2)\uFF0C\u50CF O(logn)\u3001O(nlogn) \u8FD9\u6837\u7684\u5BF9\u6570\u9636\u590D\u6742\u5EA6\u5E73\u65F6\u90FD\u7528\u4E0D\u5230</p>`,49),r={href:"https://github.com/biaochenxuying/blog/issues/29",target:"_blank",rel:"noopener noreferrer"},i=l("\u53C2\u8003");function d(m,h){const s=p("ExternalLinkIcon");return t(),o("div",null,[k,n("p",null,[n("a",r,[i,e(s)])])])}var f=a(u,[["render",d],["__file","complexity.html.vue"]]);export{f as default};
