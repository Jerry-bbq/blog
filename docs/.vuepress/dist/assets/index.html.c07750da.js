import{_ as n,o as a,c as s,e as t}from"./app.b512b0af.js";const p={},o=t(`<h1 id="leetcode\u5237\u9898" tabindex="-1"><a class="header-anchor" href="#leetcode\u5237\u9898" aria-hidden="true">#</a> leetcode\u5237\u9898</h1><h2 id="\u4E24\u6570\u4E4B\u548C" tabindex="-1"><a class="header-anchor" href="#\u4E24\u6570\u4E4B\u548C" aria-hidden="true">#</a> \u4E24\u6570\u4E4B\u548C</h2><p>\u6848\u4F8B\u4E00\uFF1A</p><ul><li>\u8F93\u5165\uFF1Anums = [2,7,11,15], target = 9</li><li>\u8F93\u51FA\uFF1A[0,1]</li><li>\u89E3\u91CA\uFF1A\u56E0\u4E3A nums[0] + nums[1] == 9 \uFF0C\u8FD4\u56DE [0, 1] \u3002</li></ul><p>\u6848\u4F8B\u4E8C\uFF1A</p><ul><li>\u8F93\u5165\uFF1Anums = [3,3], target = 6</li><li>\u8F93\u51FA\uFF1A[0,1]</li></ul><h3 id="\u66B4\u529B\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u66B4\u529B\u679A\u4E3E" aria-hidden="true">#</a> \u66B4\u529B\u679A\u4E3E</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u590D\u6742\u5EA6\u5206\u6790</p><ul><li>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(N^2)\uFF0C\u5176\u4E2D N \u662F\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u6570\u91CF\u3002\u6700\u574F\u60C5\u51B5\u4E0B\u6570\u7EC4\u4E2D\u4EFB\u610F\u4E24\u4E2A\u6570\u90FD\u8981\u88AB\u5339\u914D\u4E00\u6B21\u3002</li><li>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(1)O(1)\u3002</li></ul><h3 id="hash\u8868" tabindex="-1"><a class="header-anchor" href="#hash\u8868" aria-hidden="true">#</a> hash\u8868</h3><p>\u4E0D\u53EF\u4EE5\u4F7F\u7528set\uFF0C\u56E0\u4E3Aset\u4F1A\u5BF9\u6570\u7EC4\u53BB\u91CD</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> diff <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
        map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,13),e=[o];function c(u,l){return a(),s("div",null,e)}var k=n(p,[["render",c],["__file","index.html.vue"]]);export{k as default};
