import{_ as n,o as a,c as s,a as p}from"./app.ec8717cf.js";const t={},e=p(`<h1 id="\u7B97\u6CD5\u8BBE\u8BA1\u4E0E\u6280\u5DE7" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u8BBE\u8BA1\u4E0E\u6280\u5DE7" aria-hidden="true">#</a> \u7B97\u6CD5\u8BBE\u8BA1\u4E0E\u6280\u5DE7</h1><ul><li>\u5206\u800C\u6CBB\u4E4B\u7B97\u6CD5</li><li>\u52A8\u6001\u89C4\u5212</li><li>\u8D2A\u5FC3\u7B97\u6CD5</li><li>\u56DE\u6EAF\u7B97\u6CD5</li><li>\u8457\u540D\u7B97\u6CD5\u95EE\u9898</li></ul><h2 id="\u5206\u800C\u6CBB\u4E4B\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5206\u800C\u6CBB\u4E4B\u7B97\u6CD5" aria-hidden="true">#</a> \u5206\u800C\u6CBB\u4E4B\u7B97\u6CD5</h2><p>\u5206\u800C\u6CBB\u4E4B\u7B97\u6CD5\u53EF\u4EE5\u5206\u6210\u4E09\u4E2A\u90E8\u5206:</p><ul><li><strong>\u5206\u89E3</strong>\u539F\u95EE\u9898\u4E3A\u591A\u4E2A\u5B50\u95EE\u9898\uFF08\u539F\u95EE\u9898\u7684\u591A\u4E2A\u5C0F\u5B9E\u4F8B\uFF09\u3002</li><li><strong>\u89E3\u51B3</strong>\u5B50\u95EE\u9898\uFF0C\u7528\u8FD4\u56DE\u89E3\u51B3\u5B50\u95EE\u9898\u7684\u65B9\u5F0F\u7684\u9012\u5F52\u7B97\u6CD5\u3002\u9012\u5F52\u7B97\u6CD5\u7684\u57FA\u672C\u60C5\u5F62\u53EF\u4EE5\u7528\u6765\u89E3\u51B3\u5B50\u95EE\u9898\u3002</li><li><strong>\u7EC4\u5408</strong>\u8FD9\u4E9B\u5B50\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u5F0F\uFF0C\u5F97\u5230\u539F\u95EE\u9898\u7684\u89E3\u3002</li></ul><h3 id="\u4E8C\u5206\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u641C\u7D22" aria-hidden="true">#</a> \u4E8C\u5206\u641C\u7D22</h3><p>\u5C06\u4E8C\u5206\u641C\u7D22\u7528\u5206\u800C\u6CBB\u4E4B\u7684\u65B9\u5F0F\u5B9E\u73B0</p><ul><li>\u5206\u89E3\uFF1A\u8BA1\u7B97 mid \u5E76\u641C\u7D22\u6570\u7EC4\u8F83\u5C0F\u6216\u8F83\u5927\u7684\u4E00\u534A\u3002</li><li>\u89E3\u51B3\uFF1A\u5728\u8F83\u5C0F\u6216\u8F83\u5927\u7684\u4E00\u534A\u4E2D\u641C\u7D22\u503C\u3002</li><li>\u5408\u5E76\uFF1A\u8FD9\u6B65\u4E0D\u9700\u8981\uFF0C\u56E0\u4E3A\u6211\u4EEC\u76F4\u63A5\u8FD4\u56DE\u4E86\u7D22\u5F15\u503C</li></ul><p>\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">binarySearchRecursive</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> value<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high<span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">binarySearchRecursive</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> value<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> high<span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareFn</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">BIGGER_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">binarySearchRecursive</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> value<span class="token punctuation">,</span> low<span class="token punctuation">,</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> mid 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token constant">DOES_NOT_EXIST</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> value<span class="token punctuation">,</span> compareFn <span class="token operator">=</span> defaultCompare</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> sortedArray <span class="token operator">=</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
  <span class="token keyword">const</span> low <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">const</span> high <span class="token operator">=</span> sortedArray<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token keyword">return</span> <span class="token function">binarySearchRecursive</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> value<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high<span class="token punctuation">,</span> compareFn<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h2><p>\u52A8\u6001\u89C4\u5212\uFF08 dynamic programming\uFF0C DP\uFF09\u662F\u4E00\u79CD\u5C06\u590D\u6742\u95EE\u9898\u5206\u89E3\u6210\u66F4\u5C0F\u7684\u5B50\u95EE\u9898\u6765\u89E3\u51B3\u7684\u4F18\u5316\u6280\u672F</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u6CE8\u610F\uFF0C\u52A8\u6001\u89C4\u5212\u548C\u5206\u800C\u6CBB\u4E4B\u662F\u4E0D\u540C\u7684\u65B9\u6CD5\u3002\u5206\u800C\u6CBB\u4E4B\u65B9\u6CD5\u662F\u628A\u95EE\u9898\u5206\u89E3\u6210\u76F8\u4E92\u72EC\u7ACB\u7684\u5B50\u95EE\u9898\uFF0C\u7136\u540E\u7EC4\u5408\u5B83\u4EEC\u7684\u7B54\u6848\uFF0C\u800C\u52A8\u6001\u89C4\u5212\u5219\u662F\u5C06\u95EE\u9898\u5206\u89E3\u6210\u76F8\u4E92\u4F9D\u8D56\u7684\u5B50\u95EE\u9898</p></div><p>\u7528\u52A8\u6001\u89C4\u5212\u89E3\u51B3\u95EE\u9898\u65F6\uFF0C\u8981\u9075\u5FAA\u4E09\u4E2A\u91CD\u8981\u6B65\u9AA4\uFF1A</p><ul><li>\u5B9A\u4E49\u5B50\u95EE\u9898\uFF1B</li><li>\u5B9E\u73B0\u8981\u53CD\u590D\u6267\u884C\u6765\u89E3\u51B3\u5B50\u95EE\u9898\u7684\u90E8\u5206\uFF08\u8FD9\u4E00\u6B65\u8981\u53C2\u8003\u524D\u4E00\u8282\u8BA8\u8BBA\u7684\u9012\u5F52\u7684\u6B65\u9AA4\uFF09\uFF1B</li><li>\u8BC6\u522B\u5E76\u6C42\u89E3\u51FA\u57FA\u7EBF\u6761\u4EF6\u3002</li></ul><p>\u6590\u6CE2\u90A3\u5951\u6570\u5217\u5C31\u662F\u4F7F\u7528\u52A8\u6001\u89C4\u5212\u5B8C\u6210\u7684</p><h2 id="\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a> \u8D2A\u5FC3\u7B97\u6CD5</h2><h2 id="\u56DE\u6EAF\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6EAF\u7B97\u6CD5" aria-hidden="true">#</a> \u56DE\u6EAF\u7B97\u6CD5</h2>`,18),o=[e];function c(l,i){return a(),s("div",null,o)}var r=n(t,[["render",c],["__file","algorithm-skill.html.vue"]]);export{r as default};
